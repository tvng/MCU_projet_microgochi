Microchip MPLAB XC8 Compiler V2.00 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v2.00\pic\dat\en_msgs.txt \
  -cs -h+dist/default/production\MCU_projet_tamagogo.X.production.sym \
  --cmf=dist/default/production\MCU_projet_tamagogo.X.production.cmf -z \
  -Q18F4550 -oC:\Users\acajo\AppData\Local\Temp\st0.2 \
  --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/MCU_projet_tamagogo.X.production.map -E1 \
  -ver=XC8 --acfsm=1493 -ASTACK=060h-07ffh -pstack=STACK -ACODE=00h-07FFFh \
  -ACONST=00h-07FFFh -ASMALLCONST=0800h-08FFhx120 \
  -AMEDIUMCONST=0800h-07FFFh -ACOMRAM=01h-05Fh -AABS1=00h-07FFh \
  -ABIGRAM=01h-07FFh -ARAM=060h-0FFh,0100h-01FFhx7 -ABANK0=060h-0FFh \
  -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh -ABANK3=0300h-03FFh \
  -ABANK4=0400h-04FFh -ABANK5=0500h-05FFh -ABANK6=0600h-06FFh \
  -ABANK7=0700h-07FFh -ASFR=0F60h-0FFFh \
  -preset_vec=00h,intcode,intcodelo,powerup,init -pramtop=0800h \
  -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST -pconst=CONST \
  -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\acajo\AppData\Local\Temp\st0.o \
  dist/default/production\MCU_projet_tamagogo.X.production.o 

Object code version is 3.11

Machine type is 18F4550

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\acajo\AppData\Local\Temp\st0.o
                init                                  0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production\MCU_projet_tamagogo.X.production.o
                mediumconst                        7302     7302      CFE     3981       0
                text19                             64F4     64F4       46     327A       0
                text18                             6794     6794       B8     33CA       0
                text17                             691A     691A       D6     348D       0
                text16                             669E     669E       70     334F       0
                text15                             700C     700C      144     3806       0
                text14                             6EE0     6EE0      12C     3770       0
                text13                             6630     6630       6E     3318       0
                text12                             648E     648E       12     3247       0
                text11                             648C     648C        2     3246       0
                text10                             6580     6580       56     32C0       0
                text9                              6ACA     6ACA       EC     3565       0
                text8                              653A     653A       46     329D       0
                text7                              69F0     69F0       DA     34F8       0
                text6                              6DBA     6DBA      126     36DD       0
                text5                              6CA8     6CA8      112     3654       0
                text4                              7150     7150      1B2     38A8       0
                text3                              684C     684C       CE     3426       0
                text2                              65D6     65D6       5A     32EB       0
                text1                              6BB6     6BB6       F2     35DB       0
                text0                              670E     670E       86     3387       0
                cstackCOMRAM                          1        1       3A        1       1
                dataCOMRAM                           3B       3B       1E        1       1
                bssCOMRAM                            59       59        6        1       1
                cinit                              64BE     64BE       36     325F       0
                idataCOMRAM                        64A0     64A0       1E     64A0       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                init                                  0        0        4         0
                text19                             64F4     64F4       46         0
                text18                             6794     6794       B8         0
                text17                             691A     691A       D6         0
                text16                             669E     669E       70         0
                text15                             700C     700C      144         0
                text14                             6EE0     6EE0      12C         0
                text13                             6630     6630       6E         0
                text12                             648E     648E       12         0
                text11                             648C     648C        2         0
                text10                             6580     6580       56         0
                text9                              6ACA     6ACA       EC         0
                text8                              653A     653A       46         0
                text7                              69F0     69F0       DA         0
                text6                              6DBA     6DBA      126         0
                text5                              6CA8     6CA8      112         0
                text4                              7150     7150      1B2         0
                text3                              684C     684C       CE         0
                text2                              65D6     65D6       5A         0
                text1                              6BB6     6BB6       F2         0
                text0                              670E     670E       86         0
                cinit                              64BE     64BE       36         0
                idataCOMRAM                        64A0     64A0       1E         0

        CLASS   CONST          

        CLASS   SMALLCONST     

        CLASS   MEDIUMCONST    
                mediumconst                        7302     7302      CFE         0

        CLASS   COMRAM         
                cstackCOMRAM                          1        1       3A         1
                dataCOMRAM                           3B       3B       1E         1
                bssCOMRAM                            59       59        6         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   BANK4          

        CLASS   BANK5          

        CLASS   BANK6          

        CLASS   BANK7          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  00005E  00005F         1       1  COMRAM  
                text11                         00648C  000002  00648E      3246       0  CODE    
                text12                         00648E  000012  0064A0      3247       0  CODE    
                idataCOMRAM                    0064A0  00001E  0064BE      64A0       0  CODE    
                cinit                          0064BE  000036  0064F4      325F       0  CODE    
                text19                         0064F4  000046  00653A      327A       0  CODE    
                text8                          00653A  000046  006580      329D       0  CODE    
                text10                         006580  000056  0065D6      32C0       0  CODE    
                text2                          0065D6  00005A  006630      32EB       0  CODE    
                text13                         006630  00006E  00669E      3318       0  CODE    
                text16                         00669E  000070  00670E      334F       0  CODE    
                text0                          00670E  000086  006794      3387       0  CODE    
                text18                         006794  0000B8  00684C      33CA       0  CODE    
                text3                          00684C  0000CE  00691A      3426       0  CODE    
                text17                         00691A  0000D6  0069F0      348D       0  CODE    
                text7                          0069F0  0000DA  006ACA      34F8       0  CODE    
                text9                          006ACA  0000EC  006BB6      3565       0  CODE    
                text1                          006BB6  0000F2  006CA8      35DB       0  CODE    
                text5                          006CA8  000112  006DBA      3654       0  CODE    
                text6                          006DBA  000126  006EE0      36DD       0  CODE    
                text14                         006EE0  00012C  00700C      3770       0  CODE    
                text15                         00700C  000144  007150      3806       0  CODE    
                text4                          007150  0001B2  007302      38A8       0  CODE    
                mediumconst                    007302  000CFE  008000      3981       0  MEDIUMCO
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            000060-0000FF               A0
        BANK1            000100-0001FF              100
        BANK2            000200-0002FF              100
        BANK3            000300-0003FF              100
        BANK4            000400-0004FF              100
        BANK5            000500-0005FF              100
        BANK6            000600-0006FF              100
        BANK7            000700-0007FF              100
        BIGRAM           00005F-0007FF              7A1
        CODE             000004-00648B             6488
        COMRAM           00005F-00005F                1
        CONST            000004-00648B             6488
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      000800-00648B             5C8C
        RAM              000060-0007FF              100
        SFR              000F60-000FFF               A0
        SMALLCONST       000800-00648B              100
        STACK            000060-0007FF              7A0

                                  Symbol Table

?___awdiv                       cstackCOMRAM 000001
?_microgochi_init               cstackCOMRAM 000001
_ADCON1                         (abs)        000FC1
_Font3x6                        mediumconst  007F03
_Font8x8                        mediumconst  007303
_LATBbits                       (abs)        000F8A
_LATD                           (abs)        000F8C
_PORTA                          (abs)        000F80
_PORTB                          (abs)        000F81
_PORTC                          (abs)        000F82
_PORTCbits                      (abs)        000F82
_PORTD                          (abs)        000F83
_PORTEbits                      (abs)        000F84
_TRISA                          (abs)        000F92
_TRISB                          (abs)        000F93
_TRISC                          (abs)        000F94
_TRISD                          (abs)        000F95
__HRAM                          (abs)        000000
__Habs1                         abs1         000000
__Hbank0                        bank0        000000
__Hbank1                        bank1        000000
__Hbank2                        bank2        000000
__Hbank3                        bank3        000000
__Hbank4                        bank4        000000
__Hbank5                        bank5        000000
__Hbank6                        bank6        000000
__Hbank7                        bank7        000000
__Hbigbss                       bigbss       000000
__Hbigdata                      bigdata      000000
__Hbigram                       bigram       000000
__Hbss                          bss          000000
__HbssCOMRAM                    bssCOMRAM    000000
__Hcinit                        cinit        000000
__Hclrtext                      clrtext      000000
__Hcomram                       comram       000000
__Hconfig                       config       30000E
__Hconst                        const        000000
__HcstackCOMRAM                 cstackCOMRAM 000000
__Hdata                         data         000000
__HdataCOMRAM                   dataCOMRAM   000000
__Heeprom_data                  eeprom_data  000000
__Hfarbss                       farbss       000000
__Hfardata                      fardata      000000
__Hibigdata                     ibigdata     000000
__Hidata                        idata        000000
__HidataCOMRAM                  idataCOMRAM  000000
__Hidloc                        idloc        200008
__Hifardata                     ifardata     000000
__Hinit                         init         000004
__Hintcode                      intcode      000000
__Hintcode_body                 intcode_body 000000
__Hintcodelo                    intcodelo    000000
__Hintentry                     intentry     000000
__Hintret                       intret       000000
__Hintsave_regs                 intsave_regs 000000
__Hirdata                       irdata       000000
__Hmediumconst                  mediumconst  008000
__HnvFARRAM                     nvFARRAM     000000
__Hnvbit                        nvbit        000000
__Hnvrram                       nvrram       000000
__Hparam                        rparam       000000
__Hpowerup                      powerup      000000
__Hram                          ram          000000
__Hramtop                       ramtop       000800
__Hrbit                         rbit         000000
__Hrbss                         rbss         000000
__Hrdata                        rdata        000000
__Hreset_vec                    reset_vec    000000
__Hrparam                       rparam       000000
__Hsfr                          sfr          000000
__Hsmallconst                   smallconst   000000
__Hspace_0                      (abs)        30000E
__Hspace_1                      (abs)        00005F
__Hspace_2                      (abs)        000000
__Hstack                        stack        000000
__Hstruct                       struct       000000
__Htemp                         temp         000000
__Htext                         text         000000
__Htext0                        text0        000000
__Htext1                        text1        000000
__Htext10                       text10       000000
__Htext11                       text11       000000
__Htext12                       text12       000000
__Htext13                       text13       000000
__Htext14                       text14       000000
__Htext15                       text15       000000
__Htext16                       text16       000000
__Htext17                       text17       000000
__Htext18                       text18       000000
__Htext19                       text19       000000
__Htext2                        text2        000000
__Htext3                        text3        000000
__Htext4                        text4        000000
__Htext5                        text5        000000
__Htext6                        text6        000000
__Htext7                        text7        000000
__Htext8                        text8        000000
__Htext9                        text9        000000
__LRAM                          (abs)        000001
__Labs1                         abs1         000000
__Lbank0                        bank0        000000
__Lbank1                        bank1        000000
__Lbank2                        bank2        000000
__Lbank3                        bank3        000000
__Lbank4                        bank4        000000
__Lbank5                        bank5        000000
__Lbank6                        bank6        000000
__Lbank7                        bank7        000000
__Lbigbss                       bigbss       000000
__Lbigdata                      bigdata      000000
__Lbigram                       bigram       000000
__Lbss                          bss          000000
__LbssCOMRAM                    bssCOMRAM    000000
__Lcinit                        cinit        000000
__Lclrtext                      clrtext      000000
__Lcomram                       comram       000000
__Lconfig                       config       300000
__Lconst                        const        000000
__LcstackCOMRAM                 cstackCOMRAM 000000
__Ldata                         data         000000
__LdataCOMRAM                   dataCOMRAM   000000
__Leeprom_data                  eeprom_data  000000
__Lfarbss                       farbss       000000
__Lfardata                      fardata      000000
__Libigdata                     ibigdata     000000
__Lidata                        idata        000000
__LidataCOMRAM                  idataCOMRAM  000000
__Lidloc                        idloc        200000
__Lifardata                     ifardata     000000
__Linit                         init         000000
__Lintcode                      intcode      000000
__Lintcode_body                 intcode_body 000000
__Lintcodelo                    intcodelo    000000
__Lintentry                     intentry     000000
__Lintret                       intret       000000
__Lintsave_regs                 intsave_regs 000000
__Lirdata                       irdata       000000
__Lmediumconst                  mediumconst  007302
__LnvFARRAM                     nvFARRAM     000000
__Lnvbit                        nvbit        000000
__Lnvrram                       nvrram       000000
__Lparam                        rparam       000000
__Lpowerup                      powerup      000000
__Lram                          ram          000000
__Lramtop                       ramtop       000800
__Lrbit                         rbit         000000
__Lrbss                         rbss         000000
__Lrdata                        rdata        000000
__Lreset_vec                    reset_vec    000000
__Lrparam                       rparam       000000
__Lsfr                          sfr          000000
__Lsmallconst                   smallconst   000000
__Lspace_0                      (abs)        000000
__Lspace_1                      (abs)        000000
__Lspace_2                      (abs)        000000
__Lstack                        stack        000000
__Lstruct                       struct       000000
__Ltemp                         temp         000000
__Ltext                         text         000000
__Ltext0                        text0        000000
__Ltext1                        text1        000000
__Ltext10                       text10       000000
__Ltext11                       text11       000000
__Ltext12                       text12       000000
__Ltext13                       text13       000000
__Ltext14                       text14       000000
__Ltext15                       text15       000000
__Ltext16                       text16       000000
__Ltext17                       text17       000000
__Ltext18                       text18       000000
__Ltext19                       text19       000000
__Ltext2                        text2        000000
__Ltext3                        text3        000000
__Ltext4                        text4        000000
__Ltext5                        text5        000000
__Ltext6                        text6        000000
__Ltext7                        text7        000000
__Ltext8                        text8        000000
__Ltext9                        text9        000000
__S0                            (abs)        30000E
__S1                            (abs)        00005F
__S2                            (abs)        000000
___awdiv                        text9        006ACA
___awdiv@counter                cstackCOMRAM 000005
___awdiv@dividend               cstackCOMRAM 000001
___awdiv@divisor                cstackCOMRAM 000003
___awdiv@quotient               cstackCOMRAM 000007
___awdiv@sign                   cstackCOMRAM 000006
___inthi_sp                     stack        000000
___intlo_sp                     stack        000000
___param_bank                   (abs)        000000
___rparam_used                  (abs)        000001
___sp                           stack        000000
__accesstop                     (abs)        000060
__activetblptr                  (abs)        000002
__end_of_Font3x6                mediumconst  007FC6
__end_of_Font8x8                mediumconst  007B03
__end_of___awdiv                text9        006BB6
__end_of__initialization        cinit        0064EA
__end_of_displayObject          text6        006EE0
__end_of_game_play              text4        007302
__end_of_glcd_FillScreen        text18       00684C
__end_of_glcd_Image             text17       0069F0
__end_of_glcd_Init              text3        00691A
__end_of_glcd_PlotPixel         text7        006ACA
__end_of_glcd_ReadByte          text8        006580
__end_of_glcd_SetCursor         text16       00670E
__end_of_glcd_WriteByte         text19       00653A
__end_of_glcd_WriteChar3x6      text15       007150
__end_of_glcd_WriteChar8X8      text14       00700C
__end_of_glcd_WriteString       text13       00669E
__end_of_main                   text0        006794
__end_of_menu_actions           text10       0065D6
__end_of_menu_cursor            text5        006DBA
__end_of_micro_manger           text12       0064A0
__end_of_microgochi_init        text2        006630
__end_of_ou                     mediumconst  007FCE
__end_of_screen_afficher_stats  text11       00648E
__end_of_screen_credits         text1        006CA8
__end_of_test                   mediumconst  007F03
__initialization                cinit        0064BE
__mediumconst                   mediumconst  007302
__pbssCOMRAM                    bssCOMRAM    000059
__pcinit                        cinit        0064BE
__pcstackCOMRAM                 cstackCOMRAM 000001
__pdataCOMRAM                   dataCOMRAM   00003B
__pidataCOMRAM                  idataCOMRAM  0064A0
__pmediumconst                  mediumconst  007302
__ptext0                        text0        00670E
__ptext1                        text1        006BB6
__ptext10                       text10       006580
__ptext11                       text11       00648C
__ptext12                       text12       00648E
__ptext13                       text13       006630
__ptext14                       text14       006EE0
__ptext15                       text15       00700C
__ptext16                       text16       00669E
__ptext17                       text17       00691A
__ptext18                       text18       006794
__ptext19                       text19       0064F4
__ptext2                        text2        0065D6
__ptext3                        text3        00684C
__ptext4                        text4        007150
__ptext5                        text5        006CA8
__ptext6                        text6        006DBA
__ptext7                        text7        0069F0
__ptext8                        text8        00653A
__ptext9                        text9        006ACA
__ramtop                        ramtop       000800
__size_of___awdiv               (abs)        000000
__size_of_displayObject         (abs)        000000
__size_of_game_play             (abs)        000000
__size_of_glcd_FillScreen       (abs)        000000
__size_of_glcd_Image            (abs)        000000
__size_of_glcd_Init             (abs)        000000
__size_of_glcd_PlotPixel        (abs)        000000
__size_of_glcd_ReadByte         (abs)        000000
__size_of_glcd_SetCursor        (abs)        000000
__size_of_glcd_WriteByte        (abs)        000000
__size_of_glcd_WriteChar3x6     (abs)        000000
__size_of_glcd_WriteChar8X8     (abs)        000000
__size_of_glcd_WriteString      (abs)        000000
__size_of_main                  (abs)        000000
__size_of_menu_actions          (abs)        000000
__size_of_menu_cursor           (abs)        000000
__size_of_micro_manger          (abs)        000000
__size_of_microgochi_init       (abs)        000000
__size_of_screen_afficher_stats (abs)        000000
__size_of_screen_credits        (abs)        000000
__smallconst                    smallconst   000000
_cpt                            bssCOMRAM    000059
_cursor                         dataCOMRAM   00003B
_displayObject                  text6        006DBA
_game_play                      text4        007150
_glcd_FillScreen                text18       006794
_glcd_Image                     text17       00691A
_glcd_Init                      text3        00684C
_glcd_PlotPixel                 text7        0069F0
_glcd_ReadByte                  text8        00653A
_glcd_SetCursor                 text16       00669E
_glcd_WriteByte                 text19       0064F4
_glcd_WriteChar3x6              text15       00700C
_glcd_WriteChar8X8              text14       006EE0
_glcd_WriteString               text13       006630
_mGogo                          bssCOMRAM    00005B
_main                           text0        00670E
_menu_actions                   text10       006580
_menu_cursor                    text5        006CA8
_micro_manger                   text12       00648E
_microgochi_init                text2        0065D6
_ou                             mediumconst  007FC6
_screen_afficher_stats          text11       00648C
_screen_credits                 text1        006BB6
_test                           mediumconst  007B03
_x                              bssCOMRAM    00005E
_y                              bssCOMRAM    00005D
displayObject@height            cstackCOMRAM 000018
displayObject@i                 cstackCOMRAM 000023
displayObject@j                 cstackCOMRAM 000025
displayObject@nb                cstackCOMRAM 000021
displayObject@tab               cstackCOMRAM 000012
displayObject@width             cstackCOMRAM 00001A
displayObject@write             cstackCOMRAM 00001C
displayObject@x                 cstackCOMRAM 000014
displayObject@y                 cstackCOMRAM 000016
end_of_initialization           cinit        0064EA
game_play@action                cstackCOMRAM 000032
game_play@button_pressed        cstackCOMRAM 000030
game_play@write                 cstackCOMRAM 00002E
glcd_FillScreen@color           cstackCOMRAM 00000B
glcd_FillScreen@i               cstackCOMRAM 00000D
glcd_FillScreen@j               cstackCOMRAM 00000C
glcd_Image@cs                   cstackCOMRAM 00000F
glcd_Image@i                    cstackCOMRAM 00000E
glcd_Image@j                    cstackCOMRAM 00000D
glcd_Image@ptr                  cstackCOMRAM 00000B
glcd_Init@mode                  cstackCOMRAM 00000F
glcd_PlotPixel@color            cstackCOMRAM 00000C
glcd_PlotPixel@data             cstackCOMRAM 000010
glcd_PlotPixel@side             cstackCOMRAM 000011
glcd_PlotPixel@xpos             cstackCOMRAM 00000F
glcd_PlotPixel@ypos             cstackCOMRAM 00000B
glcd_ReadByte@data              cstackCOMRAM 000002
glcd_ReadByte@side              cstackCOMRAM 000001
glcd_SetCursor@side             cstackCOMRAM 00000C
glcd_SetCursor@xpos             cstackCOMRAM 00000D
glcd_SetCursor@ypos             cstackCOMRAM 00000B
glcd_WriteByte@data             cstackCOMRAM 000009
glcd_WriteByte@side             cstackCOMRAM 00000A
glcd_WriteChar3x6@ch            cstackCOMRAM 00000F
glcd_WriteChar3x6@color         cstackCOMRAM 00000B
glcd_WriteChar3x6@i             cstackCOMRAM 000010
glcd_WriteChar3x6@side          cstackCOMRAM 000011
glcd_WriteChar3x6@xpos          cstackCOMRAM 00000E
glcd_WriteChar8X8@ch            cstackCOMRAM 000010
glcd_WriteChar8X8@chr           cstackCOMRAM 00000E
glcd_WriteChar8X8@color         cstackCOMRAM 00000B
glcd_WriteChar8X8@i             cstackCOMRAM 000012
glcd_WriteChar8X8@side          cstackCOMRAM 000013
glcd_WriteChar8X8@xpos          cstackCOMRAM 000011
glcd_WriteString@color          cstackCOMRAM 000017
glcd_WriteString@font           cstackCOMRAM 000016
glcd_WriteString@str            cstackCOMRAM 000014
intlevel0                       text         000000
intlevel1                       text         000000
intlevel2                       text         000000
intlevel3                       text         000000
main@bool_jeu                   cstackCOMRAM 000039
menu_actions@action             cstackCOMRAM 000018
menu_cursor@action              cstackCOMRAM 000027
menu_cursor@write               cstackCOMRAM 000029
microgochi_init@m               cstackCOMRAM 000001
stackhi                         (abs)        0007FF
stacklo                         (abs)        000060
start                           init         000000
start_initialization            cinit        0064BE


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 27 in file "main.c"
 Parameters:    Size  Location     Type
  argc            2   51[COMRAM] int 
  argv            3   53[COMRAM] PTR PTR unsigned char 
 Auto vars:     Size  Location     Type
  bool_jeu        2   56[COMRAM] int 
 Return value:  Size  Location     Type
                  2   51[COMRAM] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         5       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels required when called:    5
 This function calls:
		_game_play
		_glcd_Init
		_microgochi_init
		_screen_credits
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _screen_credits *****************
 Defined at:
		line 25 in file "screen.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_glcd_FillScreen
		_glcd_SetCursor
		_glcd_WriteString
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _microgochi_init *****************
 Defined at:
		line 12 in file "microgochi.c"
 Parameters:    Size  Location     Type
  m               2    0[COMRAM] PTR struct Microgochi
		 -> NULL(0), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2    0[COMRAM] PTR struct Microgochi
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _glcd_Init *****************
 Defined at:
		line 341 in file "glcd.c"
 Parameters:    Size  Location     Type
  mode            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  mode            1   14[COMRAM] unsigned char 
  k               1    0        unsigned char 
  j               1    0        unsigned char 
  i               1    0        unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_glcd_FillScreen
		_glcd_WriteByte
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _game_play *****************
 Defined at:
		line 18 in file "game.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  action          2   49[COMRAM] int 
  button_press    2   47[COMRAM] int 
  write           2   45[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_glcd_FillScreen
		_glcd_Image
		_glcd_SetCursor
		_menu_actions
		_menu_cursor
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _menu_cursor *****************
 Defined at:
		line 17 in file "menu.c"
 Parameters:    Size  Location     Type
  action          2   38[COMRAM] int 
  write           2   40[COMRAM] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_displayObject
 This function is called by:
		_game_play
 This function uses a non-reentrant model


 *************** function _displayObject *****************
 Defined at:
		line 12 in file "myglcd.c"
 Parameters:    Size  Location     Type
  tab             2   17[COMRAM] PTR unsigned char 
		 -> cursor(30), 
  x               2   19[COMRAM] int 
  y               2   21[COMRAM] int 
  height          2   23[COMRAM] int 
  width           2   25[COMRAM] int 
  write           2   27[COMRAM] int 
 Auto vars:     Size  Location     Type
  j               2   36[COMRAM] int 
  i               2   34[COMRAM] int 
  nb              2   32[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:        12       0       0       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0       0       0
      Totals:        21       0       0       0       0       0       0       0       0
Total ram usage:       21 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_glcd_PlotPixel
 This function is called by:
		_menu_cursor
 This function uses a non-reentrant model


 *************** function _glcd_PlotPixel *****************
 Defined at:
		line 468 in file "glcd.c"
 Parameters:    Size  Location     Type
  xpos            1    wreg     unsigned char 
  ypos            1   10[COMRAM] unsigned char 
  color           1   11[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  xpos            1   14[COMRAM] unsigned char 
  side            1   16[COMRAM] unsigned char 
  data            1   15[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___awdiv
		_glcd_ReadByte
		_glcd_WriteByte
 This function is called by:
		_displayObject
		_glcd_Rect
 This function uses a non-reentrant model


 *************** function _glcd_ReadByte *****************
 Defined at:
		line 431 in file "glcd.c"
 Parameters:    Size  Location     Type
  side            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  side            1    0[COMRAM] unsigned char 
  data            1    1[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_glcd_PlotPixel
 This function uses a non-reentrant model


 *************** function ___awdiv *****************
 Defined at:
		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
 Parameters:    Size  Location     Type
  dividend        2    0[COMRAM] int 
  divisor         2    2[COMRAM] int 
 Auto vars:     Size  Location     Type
  quotient        2    6[COMRAM] int 
  sign            1    5[COMRAM] unsigned char 
  counter         1    4[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2    0[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_glcd_PlotPixel
 This function uses a non-reentrant model


 *************** function _menu_actions *****************
 Defined at:
		line 38 in file "menu.c"
 Parameters:    Size  Location     Type
  action          2   23[COMRAM] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_glcd_SetCursor
		_glcd_WriteString
		_micro_manger
		_screen_afficher_stats
 This function is called by:
		_game_play
 This function uses a non-reentrant model


 *************** function _screen_afficher_stats *****************
 Defined at:
		line 53 in file "screen.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_menu_actions
 This function uses a non-reentrant model


 *************** function _micro_manger *****************
 Defined at:
		line 24 in file "microgochi.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_menu_actions
 This function uses a non-reentrant model


 *************** function _glcd_WriteString *****************
 Defined at:
		line 670 in file "glcd.c"
 Parameters:    Size  Location     Type
  str             2   19[COMRAM] PTR const unsigned char 
		 -> STR_8(7), STR_7(4), STR_6(6), STR_5(5), 
		 -> STR_4(7), STR_3(6), STR_2(6), STR_1(7), 
  font            1   21[COMRAM] unsigned char 
  color           1   22[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_glcd_WriteChar3x6
		_glcd_WriteChar8X8
 This function is called by:
		_screen_credits
		_menu_actions
		_glcd_text_write
 This function uses a non-reentrant model


 *************** function _glcd_WriteChar8X8 *****************
 Defined at:
		line 576 in file "glcd.c"
 Parameters:    Size  Location     Type
  ch              1    wreg     unsigned char 
  color           1   10[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  ch              1   15[COMRAM] unsigned char 
  chr             2   13[COMRAM] unsigned int 
  side            1   18[COMRAM] unsigned char 
  i               1   17[COMRAM] unsigned char 
  xpos            1   16[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         1       0       0       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_glcd_WriteByte
 This function is called by:
		_glcd_WriteString
 This function uses a non-reentrant model


 *************** function _glcd_WriteChar3x6 *****************
 Defined at:
		line 624 in file "glcd.c"
 Parameters:    Size  Location     Type
  ch              1    wreg     unsigned char 
  color           1   10[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  ch              1   14[COMRAM] unsigned char 
  side            1   16[COMRAM] unsigned char 
  i               1   15[COMRAM] unsigned char 
  xpos            1   13[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         1       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_glcd_WriteByte
 This function is called by:
		_glcd_WriteString
 This function uses a non-reentrant model


 *************** function _glcd_SetCursor *****************
 Defined at:
		line 551 in file "glcd.c"
 Parameters:    Size  Location     Type
  xpos            1    wreg     unsigned char 
  ypos            1   10[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  xpos            1   12[COMRAM] unsigned char 
  side            1   11[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         1       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_glcd_WriteByte
 This function is called by:
		_game_play
		_screen_credits
		_menu_actions
		_glcd_text_write
 This function uses a non-reentrant model


 *************** function _glcd_Image *****************
 Defined at:
		line 697 in file "glcd.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  ptr             2   10[COMRAM] int 
  cs              1   14[COMRAM] unsigned char 
  i               1   13[COMRAM] unsigned char 
  j               1   12[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         5       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_glcd_WriteByte
 This function is called by:
		_game_play
 This function uses a non-reentrant model


 *************** function _glcd_FillScreen *****************
 Defined at:
		line 527 in file "glcd.c"
 Parameters:    Size  Location     Type
  color           1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  color           1   10[COMRAM] unsigned char 
  i               1   12[COMRAM] unsigned char 
  j               1   11[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_glcd_WriteByte
 This function is called by:
		_game_play
		_screen_credits
		_glcd_Init
 This function uses a non-reentrant model


 *************** function _glcd_WriteByte *****************
 Defined at:
		line 395 in file "glcd.c"
 Parameters:    Size  Location     Type
  side            1    wreg     unsigned char 
  data            1    8[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  side            1    9[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         1       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_glcd_Init
		_glcd_PlotPixel
		_glcd_FillScreen
		_glcd_SetCursor
		_glcd_WriteChar8X8
		_glcd_WriteChar3x6
		_glcd_Image
		_glcd_icon8X8
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
microgochi.c
		_microgochi_init		CODE           	65D6	0000	91
		_micro_manger  		CODE           	648E	0000	19

microgochi.c estimated size: 110

screen.c
		_screen_afficher_stats		CODE           	648C	0000	3
		_screen_credits		CODE           	6BB6	0000	243

screen.c estimated size: 246

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c
		___awdiv       		CODE           	6ACA	0000	237

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c estimated size: 237

shared
		_Font3x6       		MEDIUMCONST    	7F03	0000	196
		_Font8x8       		MEDIUMCONST    	7303	0000	2049
		_test          		MEDIUMCONST    	7B03	0000	1025
		__initialization		CODE           	64BE	0000	45
		_ou            		MEDIUMCONST    	7FC6	0000	9

shared estimated size: 3324

game.c
		_game_play     		CODE           	7150	0000	435

game.c estimated size: 435

glcd.c
		_glcd_SetCursor		CODE           	669E	0000	113
		_glcd_WriteString		CODE           	6630	0000	111
		_glcd_WriteByte		CODE           	64F4	0000	71
		_glcd_Init     		CODE           	684C	0000	207
		_glcd_ReadByte 		CODE           	653A	0000	71
		_glcd_WriteChar8X8		CODE           	6EE0	0000	301
		_glcd_FillScreen		CODE           	6794	0000	185
		_glcd_WriteChar3x6		CODE           	700C	0000	325
		_glcd_PlotPixel		CODE           	69F0	0000	219
		_glcd_Image    		CODE           	691A	0000	215

glcd.c estimated size: 1818

myglcd.c
		_displayObject 		CODE           	6DBA	0000	295

myglcd.c estimated size: 295

menu.c
		_menu_actions  		CODE           	6580	0000	87
		_menu_cursor   		CODE           	6CA8	0000	275

menu.c estimated size: 362

main.c
		_main          		CODE           	670E	0000	135

main.c estimated size: 135

