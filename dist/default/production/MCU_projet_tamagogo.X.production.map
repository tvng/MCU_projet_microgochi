Microchip MPLAB XC8 Compiler V2.00 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v2.00\pic\dat\en_msgs.txt \
  -cs -h+dist/default/production\MCU_projet_tamagogo.X.production.sym \
  --cmf=dist/default/production\MCU_projet_tamagogo.X.production.cmf -z \
  -Q18F4550 -oC:\Users\acajo\AppData\Local\Temp\s7l8.2 \
  --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/MCU_projet_tamagogo.X.production.map -E1 \
  -ver=XC8 --acfsm=1493 -ASTACK=060h-07ffh -pstack=STACK -ACODE=00h-07FFFh \
  -ACONST=00h-07FFFh -ASMALLCONST=0800h-08FFhx120 \
  -AMEDIUMCONST=0800h-07FFFh -ACOMRAM=01h-05Fh -AABS1=00h-07FFh \
  -ABIGRAM=01h-07FFh -ARAM=060h-0FFh,0100h-01FFhx7 -ABANK0=060h-0FFh \
  -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh -ABANK3=0300h-03FFh \
  -ABANK4=0400h-04FFh -ABANK5=0500h-05FFh -ABANK6=0600h-06FFh \
  -ABANK7=0700h-07FFh -ASFR=0F60h-0FFFh \
  -preset_vec=00h,intcode,intcodelo,powerup,init -pramtop=0800h \
  -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST -pconst=CONST \
  -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\acajo\AppData\Local\Temp\s7l8.o \
  dist/default/production\MCU_projet_tamagogo.X.production.o 

Object code version is 3.11

Machine type is 18F4550

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\acajo\AppData\Local\Temp\s7l8.o
                init                                  0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production\MCU_projet_tamagogo.X.production.o
                mediumconst                        72FC     72FC      D04     397E       0
                text12                             6A86     6A86       46     3543       0
                text11                             6BF8     6BF8       B8     35FC       0
                text10                             6A30     6A30       16     3518       0
                text9                              6A46     6A46       40     3523       0
                text8                              6CB0     6CB0       CE     3658       0
                text7                              6ACC     6ACC       4E     3566       0
                text6                              6D7E     6D7E       D6     36BF       0
                text5                              6B88     6B88       70     35C4       0
                text4                              71B8     71B8      144     38DC       0
                text3                              708C     708C      12C     3846       0
                text2                              6B1A     6B1A       6E     358D       0
                text1                              6E54     6E54      11A     372A       0
                text0                              6F6E     6F6E      11E     37B7       0
                cstackCOMRAM                          1        1       1A        1       1
                bssCOMRAM                            1B       1B        2        1       1
                cinit                              6A22     6A22        E     3511       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                init                                  0        0        4         0
                text12                             6A86     6A86       46         0
                text11                             6BF8     6BF8       B8         0
                text10                             6A30     6A30       16         0
                text9                              6A46     6A46       40         0
                text8                              6CB0     6CB0       CE         0
                text7                              6ACC     6ACC       4E         0
                text6                              6D7E     6D7E       D6         0
                text5                              6B88     6B88       70         0
                text4                              71B8     71B8      144         0
                text3                              708C     708C      12C         0
                text2                              6B1A     6B1A       6E         0
                text1                              6E54     6E54      11A         0
                text0                              6F6E     6F6E      11E         0
                cinit                              6A22     6A22        E         0

        CLASS   CONST          

        CLASS   SMALLCONST     

        CLASS   MEDIUMCONST    
                mediumconst                        72FC     72FC      D04         0

        CLASS   COMRAM         
                cstackCOMRAM                          1        1       1A         1
                bssCOMRAM                            1B       1B        2         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   BANK4          

        CLASS   BANK5          

        CLASS   BANK6          

        CLASS   BANK7          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  00001C  00001D         1       1  COMRAM  
                cinit                          006A22  00000E  006A30      3511       0  CODE    
                text10                         006A30  000016  006A46      3518       0  CODE    
                text9                          006A46  000040  006A86      3523       0  CODE    
                text12                         006A86  000046  006ACC      3543       0  CODE    
                text7                          006ACC  00004E  006B1A      3566       0  CODE    
                text2                          006B1A  00006E  006B88      358D       0  CODE    
                text5                          006B88  000070  006BF8      35C4       0  CODE    
                text11                         006BF8  0000B8  006CB0      35FC       0  CODE    
                text8                          006CB0  0000CE  006D7E      3658       0  CODE    
                text6                          006D7E  0000D6  006E54      36BF       0  CODE    
                text1                          006E54  00011A  006F6E      372A       0  CODE    
                text0                          006F6E  00011E  00708C      37B7       0  CODE    
                text3                          00708C  00012C  0071B8      3846       0  CODE    
                text4                          0071B8  000144  0072FC      38DC       0  CODE    
                mediumconst                    0072FC  000D04  008000      397E       0  MEDIUMCO
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            000060-0000FF               A0
        BANK1            000100-0001FF              100
        BANK2            000200-0002FF              100
        BANK3            000300-0003FF              100
        BANK4            000400-0004FF              100
        BANK5            000500-0005FF              100
        BANK6            000600-0006FF              100
        BANK7            000700-0007FF              100
        BIGRAM           00001D-0007FF              7E3
        CODE             000004-006A21             6A1E
        COMRAM           00001D-00005F               43
        CONST            000004-006A21             6A1E
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      000800-006A21             6222
        RAM              000060-0007FF              100
        SFR              000F60-000FFF               A0
        SMALLCONST       000800-006A21              100
        STACK            000060-0007FF              7A0

                                  Symbol Table

?_menu                      cstackCOMRAM 000001
_ADCON1                     (abs)        000FC1
_Font3x6                    mediumconst  007EFD
_Font8x8                    mediumconst  0072FD
_LATBbits                   (abs)        000F8A
_LATD                       (abs)        000F8C
_PORTA                      (abs)        000F80
_PORTB                      (abs)        000F81
_PORTC                      (abs)        000F82
_PORTCbits                  (abs)        000F82
_PORTD                      (abs)        000F83
_PORTEbits                  (abs)        000F84
_TRISA                      (abs)        000F92
_TRISB                      (abs)        000F93
_TRISC                      (abs)        000F94
_TRISD                      (abs)        000F95
__HRAM                      (abs)        000000
__Habs1                     abs1         000000
__Hbank0                    bank0        000000
__Hbank1                    bank1        000000
__Hbank2                    bank2        000000
__Hbank3                    bank3        000000
__Hbank4                    bank4        000000
__Hbank5                    bank5        000000
__Hbank6                    bank6        000000
__Hbank7                    bank7        000000
__Hbigbss                   bigbss       000000
__Hbigdata                  bigdata      000000
__Hbigram                   bigram       000000
__Hbss                      bss          000000
__HbssCOMRAM                bssCOMRAM    000000
__Hcinit                    cinit        000000
__Hclrtext                  clrtext      000000
__Hcomram                   comram       000000
__Hconfig                   config       30000E
__Hconst                    const        000000
__HcstackCOMRAM             cstackCOMRAM 000000
__Hdata                     data         000000
__Heeprom_data              eeprom_data  000000
__Hfarbss                   farbss       000000
__Hfardata                  fardata      000000
__Hibigdata                 ibigdata     000000
__Hidata                    idata        000000
__Hidloc                    idloc        200008
__Hifardata                 ifardata     000000
__Hinit                     init         000004
__Hintcode                  intcode      000000
__Hintcode_body             intcode_body 000000
__Hintcodelo                intcodelo    000000
__Hintentry                 intentry     000000
__Hintret                   intret       000000
__Hintsave_regs             intsave_regs 000000
__Hirdata                   irdata       000000
__Hmediumconst              mediumconst  008000
__HnvFARRAM                 nvFARRAM     000000
__Hnvbit                    nvbit        000000
__Hnvrram                   nvrram       000000
__Hparam                    rparam       000000
__Hpowerup                  powerup      000000
__Hram                      ram          000000
__Hramtop                   ramtop       000800
__Hrbit                     rbit         000000
__Hrbss                     rbss         000000
__Hrdata                    rdata        000000
__Hreset_vec                reset_vec    000000
__Hrparam                   rparam       000000
__Hsfr                      sfr          000000
__Hsmallconst               smallconst   000000
__Hspace_0                  (abs)        30000E
__Hspace_1                  (abs)        00001D
__Hspace_2                  (abs)        000000
__Hstack                    stack        000000
__Hstruct                   struct       000000
__Htemp                     temp         000000
__Htext                     text         000000
__Htext0                    text0        000000
__Htext1                    text1        000000
__Htext10                   text10       000000
__Htext11                   text11       000000
__Htext12                   text12       000000
__Htext2                    text2        000000
__Htext3                    text3        000000
__Htext4                    text4        000000
__Htext5                    text5        000000
__Htext6                    text6        000000
__Htext7                    text7        000000
__Htext8                    text8        000000
__Htext9                    text9        000000
__LRAM                      (abs)        000001
__Labs1                     abs1         000000
__Lbank0                    bank0        000000
__Lbank1                    bank1        000000
__Lbank2                    bank2        000000
__Lbank3                    bank3        000000
__Lbank4                    bank4        000000
__Lbank5                    bank5        000000
__Lbank6                    bank6        000000
__Lbank7                    bank7        000000
__Lbigbss                   bigbss       000000
__Lbigdata                  bigdata      000000
__Lbigram                   bigram       000000
__Lbss                      bss          000000
__LbssCOMRAM                bssCOMRAM    000000
__Lcinit                    cinit        000000
__Lclrtext                  clrtext      000000
__Lcomram                   comram       000000
__Lconfig                   config       300000
__Lconst                    const        000000
__LcstackCOMRAM             cstackCOMRAM 000000
__Ldata                     data         000000
__Leeprom_data              eeprom_data  000000
__Lfarbss                   farbss       000000
__Lfardata                  fardata      000000
__Libigdata                 ibigdata     000000
__Lidata                    idata        000000
__Lidloc                    idloc        200000
__Lifardata                 ifardata     000000
__Linit                     init         000000
__Lintcode                  intcode      000000
__Lintcode_body             intcode_body 000000
__Lintcodelo                intcodelo    000000
__Lintentry                 intentry     000000
__Lintret                   intret       000000
__Lintsave_regs             intsave_regs 000000
__Lirdata                   irdata       000000
__Lmediumconst              mediumconst  0072FC
__LnvFARRAM                 nvFARRAM     000000
__Lnvbit                    nvbit        000000
__Lnvrram                   nvrram       000000
__Lparam                    rparam       000000
__Lpowerup                  powerup      000000
__Lram                      ram          000000
__Lramtop                   ramtop       000800
__Lrbit                     rbit         000000
__Lrbss                     rbss         000000
__Lrdata                    rdata        000000
__Lreset_vec                reset_vec    000000
__Lrparam                   rparam       000000
__Lsfr                      sfr          000000
__Lsmallconst               smallconst   000000
__Lspace_0                  (abs)        000000
__Lspace_1                  (abs)        000000
__Lspace_2                  (abs)        000000
__Lstack                    stack        000000
__Lstruct                   struct       000000
__Ltemp                     temp         000000
__Ltext                     text         000000
__Ltext0                    text0        000000
__Ltext1                    text1        000000
__Ltext10                   text10       000000
__Ltext11                   text11       000000
__Ltext12                   text12       000000
__Ltext2                    text2        000000
__Ltext3                    text3        000000
__Ltext4                    text4        000000
__Ltext5                    text5        000000
__Ltext6                    text6        000000
__Ltext7                    text7        000000
__Ltext8                    text8        000000
__Ltext9                    text9        000000
__S0                        (abs)        30000E
__S1                        (abs)        00001D
__S2                        (abs)        000000
___inthi_sp                 stack        000000
___intlo_sp                 stack        000000
___param_bank               (abs)        000000
___rparam_used              (abs)        000001
___sp                       stack        000000
__accesstop                 (abs)        000060
__activetblptr              (abs)        000002
__end_of_Font3x6            mediumconst  007FC0
__end_of_Font8x8            mediumconst  007AFD
__end_of__initialization    cinit        006A26
__end_of_game_play          text9        006A86
__end_of_glcd_FillScreen    text11       006CB0
__end_of_glcd_Image         text6        006E54
__end_of_glcd_Init          text8        006D7E
__end_of_glcd_SetCursor     text5        006BF8
__end_of_glcd_WriteByte     text12       006ACC
__end_of_glcd_WriteChar3x6  text4        0072FC
__end_of_glcd_WriteChar8X8  text3        0071B8
__end_of_glcd_WriteString   text2        006B88
__end_of_main               text0        00708C
__end_of_menu               text10       006A46
__end_of_microgochi_init    text7        006B1A
__end_of_ou                 mediumconst  007FC8
__end_of_screen_credits     text1        006F6E
__end_of_test               mediumconst  007EFD
__initialization            cinit        006A22
__mediumconst               mediumconst  0072FC
__pbssCOMRAM                bssCOMRAM    00001B
__pcinit                    cinit        006A22
__pcstackCOMRAM             cstackCOMRAM 000001
__pmediumconst              mediumconst  0072FC
__ptext0                    text0        006F6E
__ptext1                    text1        006E54
__ptext10                   text10       006A30
__ptext11                   text11       006BF8
__ptext12                   text12       006A86
__ptext2                    text2        006B1A
__ptext3                    text3        00708C
__ptext4                    text4        0071B8
__ptext5                    text5        006B88
__ptext6                    text6        006D7E
__ptext7                    text7        006ACC
__ptext8                    text8        006CB0
__ptext9                    text9        006A46
__ramtop                    ramtop       000800
__size_of_game_play         (abs)        000000
__size_of_glcd_FillScreen   (abs)        000000
__size_of_glcd_Image        (abs)        000000
__size_of_glcd_Init         (abs)        000000
__size_of_glcd_SetCursor    (abs)        000000
__size_of_glcd_WriteByte    (abs)        000000
__size_of_glcd_WriteChar3x6 (abs)        000000
__size_of_glcd_WriteChar8X8 (abs)        000000
__size_of_glcd_WriteString  (abs)        000000
__size_of_main              (abs)        000000
__size_of_menu              (abs)        000000
__size_of_microgochi_init   (abs)        000000
__size_of_screen_credits    (abs)        000000
__smallconst                smallconst   000000
_game_play                  text9        006A46
_glcd_FillScreen            text11       006BF8
_glcd_Image                 text6        006D7E
_glcd_Init                  text8        006CB0
_glcd_SetCursor             text5        006B88
_glcd_WriteByte             text12       006A86
_glcd_WriteChar3x6          text4        0071B8
_glcd_WriteChar8X8          text3        00708C
_glcd_WriteString           text2        006B1A
_main                       text0        006F6E
_menu                       text10       006A30
_microgochi_init            text7        006ACC
_ou                         mediumconst  007FC0
_screen_credits             text1        006E54
_test                       mediumconst  007AFD
_x                          bssCOMRAM    00001C
_y                          bssCOMRAM    00001B
end_of_initialization       cinit        006A26
game_play@action            cstackCOMRAM 000009
game_play@m                 cstackCOMRAM 000006
glcd_FillScreen@color       cstackCOMRAM 000003
glcd_FillScreen@i           cstackCOMRAM 000005
glcd_FillScreen@j           cstackCOMRAM 000004
glcd_Image@cs               cstackCOMRAM 000007
glcd_Image@i                cstackCOMRAM 000006
glcd_Image@j                cstackCOMRAM 000005
glcd_Image@ptr              cstackCOMRAM 000003
glcd_Init@mode              cstackCOMRAM 000007
glcd_SetCursor@side         cstackCOMRAM 000004
glcd_SetCursor@xpos         cstackCOMRAM 000005
glcd_SetCursor@ypos         cstackCOMRAM 000003
glcd_WriteByte@data         cstackCOMRAM 000001
glcd_WriteByte@side         cstackCOMRAM 000002
glcd_WriteChar3x6@ch        cstackCOMRAM 000007
glcd_WriteChar3x6@color     cstackCOMRAM 000003
glcd_WriteChar3x6@i         cstackCOMRAM 000008
glcd_WriteChar3x6@side      cstackCOMRAM 000009
glcd_WriteChar3x6@xpos      cstackCOMRAM 000006
glcd_WriteChar8X8@ch        cstackCOMRAM 000008
glcd_WriteChar8X8@chr       cstackCOMRAM 000006
glcd_WriteChar8X8@color     cstackCOMRAM 000003
glcd_WriteChar8X8@i         cstackCOMRAM 00000A
glcd_WriteChar8X8@side      cstackCOMRAM 00000B
glcd_WriteChar8X8@xpos      cstackCOMRAM 000009
glcd_WriteString@color      cstackCOMRAM 00000F
glcd_WriteString@font       cstackCOMRAM 00000E
glcd_WriteString@str        cstackCOMRAM 00000C
intlevel0                   text         000000
intlevel1                   text         000000
intlevel2                   text         000000
intlevel3                   text         000000
main@bool_jeu               cstackCOMRAM 000017
main@mGogo                  cstackCOMRAM 000019
menu@selection              cstackCOMRAM 000003
microgochi_init@m           cstackCOMRAM 000001
stackhi                     (abs)        0007FF
stacklo                     (abs)        000060
start                       init         000000
start_initialization        cinit        006A22


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 28 in file "main.c"
 Parameters:    Size  Location     Type
  argc            2   17[COMRAM] int 
  argv            3   19[COMRAM] PTR PTR unsigned char 
 Auto vars:     Size  Location     Type
  mGogo           2   24[COMRAM] PTR struct Microgochi
		 -> NULL(0), 
  bool_jeu        2   22[COMRAM] int 
 Return value:  Size  Location     Type
                  2   17[COMRAM] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         5       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels required when called:    4
 This function calls:
		_game_play
		_glcd_Init
		_glcd_SetCursor
		_glcd_WriteString
		_microgochi_init
		_screen_credits
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _screen_credits *****************
 Defined at:
		line 25 in file "screen.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_glcd_FillScreen
		_glcd_Image
		_glcd_SetCursor
		_glcd_WriteString
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _glcd_WriteString *****************
 Defined at:
		line 739 in file "glcd.c"
 Parameters:    Size  Location     Type
  str             2   11[COMRAM] PTR const unsigned char 
		 -> STR_10(4), STR_9(6), STR_8(5), STR_7(7), 
		 -> STR_6(6), STR_5(6), STR_4(7), STR_3(8), 
		 -> STR_2(2), STR_1(5), 
  font            1   13[COMRAM] unsigned char 
  color           1   14[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_glcd_WriteChar3x6
		_glcd_WriteChar8X8
 This function is called by:
		_main
		_screen_credits
		_glcd_text_write
 This function uses a non-reentrant model


 *************** function _glcd_WriteChar8X8 *****************
 Defined at:
		line 645 in file "glcd.c"
 Parameters:    Size  Location     Type
  ch              1    wreg     unsigned char 
  color           1    2[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  ch              1    7[COMRAM] unsigned char 
  chr             2    5[COMRAM] unsigned int 
  side            1   10[COMRAM] unsigned char 
  i               1    9[COMRAM] unsigned char 
  xpos            1    8[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         1       0       0       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_glcd_WriteByte
 This function is called by:
		_glcd_WriteString
 This function uses a non-reentrant model


 *************** function _glcd_WriteChar3x6 *****************
 Defined at:
		line 693 in file "glcd.c"
 Parameters:    Size  Location     Type
  ch              1    wreg     unsigned char 
  color           1    2[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  ch              1    6[COMRAM] unsigned char 
  side            1    8[COMRAM] unsigned char 
  i               1    7[COMRAM] unsigned char 
  xpos            1    5[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         1       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_glcd_WriteByte
 This function is called by:
		_glcd_WriteString
 This function uses a non-reentrant model


 *************** function _glcd_SetCursor *****************
 Defined at:
		line 620 in file "glcd.c"
 Parameters:    Size  Location     Type
  xpos            1    wreg     unsigned char 
  ypos            1    2[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  xpos            1    4[COMRAM] unsigned char 
  side            1    3[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         1       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_glcd_WriteByte
 This function is called by:
		_main
		_screen_credits
		_glcd_text_write
 This function uses a non-reentrant model


 *************** function _glcd_Image *****************
 Defined at:
		line 766 in file "glcd.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  ptr             2    2[COMRAM] int 
  cs              1    6[COMRAM] unsigned char 
  i               1    5[COMRAM] unsigned char 
  j               1    4[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         5       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_glcd_WriteByte
 This function is called by:
		_screen_credits
 This function uses a non-reentrant model


 *************** function _microgochi_init *****************
 Defined at:
		line 12 in file "microgochi.c"
 Parameters:    Size  Location     Type
  m               2    0[COMRAM] PTR struct Microgochi
		 -> NULL(0), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _glcd_Init *****************
 Defined at:
		line 410 in file "glcd.c"
 Parameters:    Size  Location     Type
  mode            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  mode            1    6[COMRAM] unsigned char 
  k               1    0        unsigned char 
  j               1    0        unsigned char 
  i               1    0        unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_glcd_FillScreen
		_glcd_WriteByte
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _game_play *****************
 Defined at:
		line 15 in file "game.c"
 Parameters:    Size  Location     Type
  m               2    5[COMRAM] PTR struct Microgochi
		 -> NULL(0), 
 Auto vars:     Size  Location     Type
  action          2    8[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_glcd_FillScreen
		_menu
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _menu *****************
 Defined at:
		line 17 in file "menu.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  selection       2    2[COMRAM] int 
 Return value:  Size  Location     Type
                  2    0[COMRAM] int 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_game_play
 This function uses a non-reentrant model


 *************** function _glcd_FillScreen *****************
 Defined at:
		line 596 in file "glcd.c"
 Parameters:    Size  Location     Type
  color           1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  color           1    2[COMRAM] unsigned char 
  i               1    4[COMRAM] unsigned char 
  j               1    3[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_glcd_WriteByte
 This function is called by:
		_game_play
		_screen_credits
		_glcd_Init
 This function uses a non-reentrant model


 *************** function _glcd_WriteByte *****************
 Defined at:
		line 464 in file "glcd.c"
 Parameters:    Size  Location     Type
  side            1    wreg     unsigned char 
  data            1    0[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  side            1    1[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         1       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_glcd_Init
		_glcd_FillScreen
		_glcd_SetCursor
		_glcd_WriteChar8X8
		_glcd_WriteChar3x6
		_glcd_Image
		_glcd_PlotPixel
		_glcd_icon8X8
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
microgochi.c
		_microgochi_init		CODE           	6ACC	0000	79

microgochi.c estimated size: 79

screen.c
		_screen_credits		CODE           	6E54	0000	283

screen.c estimated size: 283

shared
		_Font3x6       		MEDIUMCONST    	7EFD	0000	196
		_Font8x8       		MEDIUMCONST    	72FD	0000	2049
		_test          		MEDIUMCONST    	7AFD	0000	1025
		__initialization		CODE           	6A22	0000	5
		_ou            		MEDIUMCONST    	7FC0	0000	9

shared estimated size: 3284

game.c
		_game_play     		CODE           	6A46	0000	65

game.c estimated size: 65

glcd.c
		_glcd_SetCursor		CODE           	6B88	0000	113
		_glcd_WriteString		CODE           	6B1A	0000	111
		_glcd_WriteByte		CODE           	6A86	0000	71
		_glcd_Init     		CODE           	6CB0	0000	207
		_glcd_WriteChar8X8		CODE           	708C	0000	301
		_glcd_FillScreen		CODE           	6BF8	0000	185
		_glcd_WriteChar3x6		CODE           	71B8	0000	325
		_glcd_Image    		CODE           	6D7E	0000	215

glcd.c estimated size: 1528

menu.c
		_menu          		CODE           	6A30	0000	23

menu.c estimated size: 23

main.c
		_main          		CODE           	6F6E	0000	287

main.c estimated size: 287

