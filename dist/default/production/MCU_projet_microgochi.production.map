Microchip MPLAB XC8 Compiler V2.00 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v2.00\pic\dat\en_msgs.txt \
  -cs -h+dist/default/production\MCU_projet_microgochi.production.sym \
  --cmf=dist/default/production\MCU_projet_microgochi.production.cmf -z \
  -Q18F4550 -oC:\Users\X250\AppData\Local\Temp\s780.2 \
  --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/MCU_projet_microgochi.production.map -E1 \
  -ver=XC8 --acfsm=1493 -ASTACK=01C2h-01ffh -pstack=STACK -ACODE=00h-07FFFh \
  -ACONST=00h-07FFFh -ASMALLCONST=0800h-08FFhx120 \
  -AMEDIUMCONST=0800h-07FFFh -ACOMRAM=01h-05Fh -AABS1=00h-07FFh \
  -ABIGRAM=01h-07FFh -ARAM=060h-0FFh,0100h-01FFhx7 -ABANK0=060h-0FFh \
  -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh -ABANK3=0300h-03FFh \
  -ABANK4=0400h-04FFh -ABANK5=0500h-05FFh -ABANK6=0600h-06FFh \
  -ABANK7=0700h-07FFh -ASFR=0F60h-0FFFh \
  -preset_vec=00h,intcode=08h,intcodelo,powerup,init -pramtop=0800h \
  -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST -pconst=CONST \
  -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\X250\AppData\Local\Temp\s780.o \
  dist/default/production\MCU_projet_microgochi.production.o 

Object code version is 3.11

Machine type is 18F4550

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\X250\AppData\Local\Temp\s780.o
                init                                  E        E        4        4       0
                reset_vec                             0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production\MCU_projet_microgochi.production.o
                intcode                               8        8        6        4       0
                temp                                 57       57        1        1       1
                mediumconst                        72BE     72BE      D42     395F       0
                text44                             2FAA     2FAA       1E        4       0
                text43                             2036     2036       D8        4       0
                intcode_body                       1490     1490      128        4       0
                text41                             1BDA     1BDA       EC        4       0
                text40                             2E8E     2E8E       46        4       0
                text39                             2E48     2E48       46        4       0
                text38                             1E84     1E84       DA        4       0
                text37                             15B8     15B8      126        4       0
                text36                             2AA6     2AA6       9E        4       0
                text35                             2D3C     2D3C       6A        4       0
                text34                             2A08     2A08       9E        4       0
                text33                             18F8     18F8      106        4       0
                text32                             296A     296A       9E        4       0
                text31                             21E4     21E4       D6        4       0
                text30                             2760     2760       B8        4       0
                text29                             2CCC     2CCC       70        4       0
                text28                             1220     1220      144        4       0
                text27                             1364     1364      12C        4       0
                text26                             2818     2818       AA        4       0
                text25                             1F5E     1F5E       D8        4       0
                text24                             2DA6     2DA6       52        4       0
                text23                             2B44     2B44       92        4       0
                text22                             210E     210E       D6        4       0
                text21                              ED6      ED6      1BE        4       0
                text20                              A28      A28      2AA        4       0
                text19                             26A0     26A0       C0        4       0
                text18                             25E0     25E0       C0        4       0
                text17                             245A     245A       C4        4       0
                text16                              3AA      3AA      370        4       0
                text15                             2F40     2F40       28        4       0
                text14                             2BD6     2BD6       84        4       0
                text13                             1094     1094      18C        4       0
                text12                              CD2      CD2      204        4       0
                text11                             2F8A     2F8A       20        4       0
                text10                             2F68     2F68       22        4       0
                text9                              2ED4     2ED4       44        4       0
                text8                              2FC8     2FC8        8        4       0
                text7                              2DF8     2DF8       50        4       0
                text6                              22BA     22BA       D2        4       0
                text5                              16DE     16DE      112        4       0
                text4                                12       12      398        4       0
                text3                              238C     238C       CE        4       0
                text2                              2F18     2F18       28        4       0
                text1                              1DAA     1DAA       DA        4       0
                text0                              28C2     28C2       A8        4       0
                cstackCOMRAM                          1        1       4D        1       1
                cstackBANK0                          E9       E9        D       60       1
                dataBIGRAM                          4EE      4EE      30E      4EE       1
                dataBANK4                           400      400       EE      400       1
                dataBANK3                           300      300       EE      300       1
                dataBANK2                           200      200       E4      200       1
                dataBANK1                           100      100       C2      100       1
                dataBANK0                            60       60       72       60       1
                bssBANK0                             D2       D2       17       60       1
                dataCOMRAM                           53       53        4        1       1
                bssCOMRAM                            4E       4E        5        1       1
                cinit                              17F0     17F0      108        4       0
                idataBANK4                         1AEC     1AEC       EE        4       0
                idataBANK3                         19FE     19FE       EE        4       0
                idataBANK2                         1CC6     1CC6       E4        4       0
                idataBANK1                         251E     251E       C2        4       0
                idataBANK0                         2C5A     2C5A       72        4       0
                idataBIGRAM                         71A      71A      30E        4       0
                idataCOMRAM                        2FD0     2FD0        4        4       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                intcode                               8        8        6         0
                init                                  E        E        4         0
                reset_vec                             0        0        4         0
                text44                             2FAA     2FAA       1E         0
                text43                             2036     2036       D8         0
                intcode_body                       1490     1490      128         0
                text41                             1BDA     1BDA       EC         0
                text40                             2E8E     2E8E       46         0
                text39                             2E48     2E48       46         0
                text38                             1E84     1E84       DA         0
                text37                             15B8     15B8      126         0
                text36                             2AA6     2AA6       9E         0
                text35                             2D3C     2D3C       6A         0
                text34                             2A08     2A08       9E         0
                text33                             18F8     18F8      106         0
                text32                             296A     296A       9E         0
                text31                             21E4     21E4       D6         0
                text30                             2760     2760       B8         0
                text29                             2CCC     2CCC       70         0
                text28                             1220     1220      144         0
                text27                             1364     1364      12C         0
                text26                             2818     2818       AA         0
                text25                             1F5E     1F5E       D8         0
                text24                             2DA6     2DA6       52         0
                text23                             2B44     2B44       92         0
                text22                             210E     210E       D6         0
                text21                              ED6      ED6      1BE         0
                text20                              A28      A28      2AA         0
                text19                             26A0     26A0       C0         0
                text18                             25E0     25E0       C0         0
                text17                             245A     245A       C4         0
                text16                              3AA      3AA      370         0
                text15                             2F40     2F40       28         0
                text14                             2BD6     2BD6       84         0
                text13                             1094     1094      18C         0
                text12                              CD2      CD2      204         0
                text11                             2F8A     2F8A       20         0
                text10                             2F68     2F68       22         0
                text9                              2ED4     2ED4       44         0
                text8                              2FC8     2FC8        8         0
                text7                              2DF8     2DF8       50         0
                text6                              22BA     22BA       D2         0
                text5                              16DE     16DE      112         0
                text4                                12       12      398         0
                text3                              238C     238C       CE         0
                text2                              2F18     2F18       28         0
                text1                              1DAA     1DAA       DA         0
                text0                              28C2     28C2       A8         0
                cinit                              17F0     17F0      108         0
                idataBANK4                         1AEC     1AEC       EE         0
                idataBANK3                         19FE     19FE       EE         0
                idataBANK2                         1CC6     1CC6       E4         0
                idataBANK1                         251E     251E       C2         0
                idataBANK0                         2C5A     2C5A       72         0
                idataBIGRAM                         71A      71A      30E         0
                idataCOMRAM                        2FD0     2FD0        4         0

        CLASS   CONST          

        CLASS   SMALLCONST     

        CLASS   MEDIUMCONST    
                mediumconst                        72BE     72BE      D42         0

        CLASS   COMRAM         
                temp                                 57       57        1         1
                cstackCOMRAM                          1        1       4D         1
                dataCOMRAM                           53       53        4         1
                bssCOMRAM                            4E       4E        5         1

        CLASS   ABS1           

        CLASS   BIGRAM         
                dataBIGRAM                          4EE      4EE      30E         1

        CLASS   RAM            

        CLASS   BANK0          
                cstackBANK0                          E9       E9        D         1
                dataBANK0                            60       60       72         1
                bssBANK0                             D2       D2       17         1

        CLASS   BANK1          
                dataBANK1                           100      100       C2         1

        CLASS   BANK2          
                dataBANK2                           200      200       E4         1

        CLASS   BANK3          
                dataBANK3                           300      300       EE         1

        CLASS   BANK4          
                dataBANK4                           400      400       EE         1

        CLASS   BANK5          

        CLASS   BANK6          

        CLASS   BANK7          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  000057  000058         1       1  COMRAM  
                intcode                        000008  002FCC  002FD4         4       0  CODE    
                dataBANK0                      000060  000096  0000F6        60       1  BANK0   
                dataBANK1                      000100  0000C2  0001C2       100       1  BANK1   
                dataBANK2                      000200  0000E4  0002E4       200       1  BANK2   
                dataBANK3                      000300  0000EE  0003EE       300       1  BANK3   
                dataBANK4                      000400  0000EE  0004EE       400       1  BANK4   
                dataBIGRAM                     0004EE  00030E  0007FC       4EE       1  BIGRAM  
                mediumconst                    0072BE  000D42  008000      395F       0  MEDIUMCO
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0000F6-0000FF                A
        BANK1            0001C2-0001FF               3E
        BANK2            0002E4-0002FF               1C
        BANK3            0003EE-0003FF               12
        BANK7            0007FC-0007FF                4
        BIGRAM           000058-00005F                8
                         0000F6-0000FF                A
                         0001C2-0001FF               3E
                         0002E4-0002FF               1C
                         0003EE-0003FF               12
                         0007FC-0007FF                4
        CODE             000004-000007                4
                         002FD4-0072BD             42EA
        COMRAM           000058-00005F                8
        CONST            000004-000007                4
                         002FD4-0072BD             42EA
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      002FD4-0072BD             42EA
        RAM              0000F6-0000FF                A
                         0001C2-0001FF               3E
                         0002E4-0002FF               1C
                         0003EE-0003FF               12
                         0007FC-0007FF                4
        SFR              000F60-000FFF               A0
        SMALLCONST       002FD4-0072BD              100
        STACK            0001C2-0001FF               3E

                                  Symbol Table

?___awdiv                     cstackCOMRAM 000007
?___awmod                     cstackCOMRAM 000007
?_creer_champi                cstackCOMRAM 000007
?_strlen                      cstackCOMRAM 000007
?i2___awmod                   cstackCOMRAM 000001
_ADCON1                       (abs)        000FC1
_Font3x6                      mediumconst  007EBF
_Font8x8                      mediumconst  0072BF
_INTCONbits                   (abs)        000FF2
_LATBbits                     (abs)        000F8A
_LATD                         (abs)        000F8C
_PIE1bits                     (abs)        000F9D
_PIR1bits                     (abs)        000F9E
_PORTA                        (abs)        000F80
_PORTB                        (abs)        000F81
_PORTC                        (abs)        000F82
_PORTCbits                    (abs)        000F82
_PORTD                        (abs)        000F83
_PORTEbits                    (abs)        000F84
_T1CONbits                    (abs)        000FCD
_TRISA                        (abs)        000F92
_TRISB                        (abs)        000F93
_TRISC                        (abs)        000F94
_TRISD                        (abs)        000F95
_Z1                           dataBANK1    00017E
_Z2                           dataBANK0    0000B2
__CFG_BOR$ON                  (abs)        000000
__CFG_CPD$OFF                 (abs)        000000
__CFG_FOSC$HS                 (abs)        000000
__CFG_LVP$OFF                 (abs)        000000
__CFG_PWRT$OFF                (abs)        000000
__CFG_WDT$ON                  (abs)        000000
__CFG_WRTD$OFF                (abs)        000000
__HRAM                        (abs)        000000
__Habs1                       abs1         000000
__Hbank0                      bank0        000000
__Hbank1                      bank1        000000
__Hbank2                      bank2        000000
__Hbank3                      bank3        000000
__Hbank4                      bank4        000000
__Hbank5                      bank5        000000
__Hbank6                      bank6        000000
__Hbank7                      bank7        000000
__Hbigbss                     bigbss       000000
__Hbigdata                    bigdata      000000
__Hbigram                     bigram       000000
__Hbss                        bss          000000
__HbssBANK0                   bssBANK0     000000
__HbssCOMRAM                  bssCOMRAM    000000
__Hcinit                      cinit        000000
__Hclrtext                    clrtext      000000
__Hcomram                     comram       000000
__Hconfig                     config       30000E
__Hconst                      const        000000
__HcstackBANK0                cstackBANK0  000000
__HcstackCOMRAM               cstackCOMRAM 000000
__Hdata                       data         000000
__HdataBANK0                  dataBANK0    000000
__HdataBANK1                  dataBANK1    000000
__HdataBANK2                  dataBANK2    000000
__HdataBANK3                  dataBANK3    000000
__HdataBANK4                  dataBANK4    000000
__HdataBIGRAM                 dataBIGRAM   000000
__HdataCOMRAM                 dataCOMRAM   000000
__Heeprom_data                eeprom_data  000000
__Hfarbss                     farbss       000000
__Hfardata                    fardata      000000
__Hibigdata                   ibigdata     000000
__Hidata                      idata        000000
__HidataBANK0                 idataBANK0   000000
__HidataBANK1                 idataBANK1   000000
__HidataBANK2                 idataBANK2   000000
__HidataBANK3                 idataBANK3   000000
__HidataBANK4                 idataBANK4   000000
__HidataBIGRAM                idataBIGRAM  000000
__HidataCOMRAM                idataCOMRAM  000000
__Hidloc                      idloc        200008
__Hifardata                   ifardata     000000
__Hinit                       init         000012
__Hintcode                    intcode      00000E
__Hintcode_body               intcode_body 000000
__Hintcodelo                  intcodelo    00000E
__Hintentry                   intentry     000000
__Hintret                     intret       000000
__Hintsave_regs               intsave_regs 000000
__Hirdata                     irdata       000000
__Hmediumconst                mediumconst  008000
__HnvFARRAM                   nvFARRAM     000000
__Hnvbit                      nvbit        000000
__Hnvrram                     nvrram       000000
__Hparam                      rparam       000000
__Hpowerup                    powerup      00000E
__Hram                        ram          000000
__Hramtop                     ramtop       000800
__Hrbit                       rbit         000000
__Hrbss                       rbss         000000
__Hrdata                      rdata        000000
__Hreset_vec                  reset_vec    000004
__Hrparam                     rparam       000000
__Hsfr                        sfr          000000
__Hsmallconst                 smallconst   000000
__Hspace_0                    (abs)        30000E
__Hspace_1                    (abs)        0007FC
__Hspace_2                    (abs)        000000
__Hstack                      stack        000000
__Hstruct                     struct       000000
__Htemp                       temp         000058
__Htext                       text         000000
__Htext0                      text0        000000
__Htext1                      text1        000000
__Htext10                     text10       000000
__Htext11                     text11       000000
__Htext12                     text12       000000
__Htext13                     text13       000000
__Htext14                     text14       000000
__Htext15                     text15       000000
__Htext16                     text16       000000
__Htext17                     text17       000000
__Htext18                     text18       000000
__Htext19                     text19       000000
__Htext2                      text2        000000
__Htext20                     text20       000000
__Htext21                     text21       000000
__Htext22                     text22       000000
__Htext23                     text23       000000
__Htext24                     text24       000000
__Htext25                     text25       000000
__Htext26                     text26       000000
__Htext27                     text27       000000
__Htext28                     text28       000000
__Htext29                     text29       000000
__Htext3                      text3        000000
__Htext30                     text30       000000
__Htext31                     text31       000000
__Htext32                     text32       000000
__Htext33                     text33       000000
__Htext34                     text34       000000
__Htext35                     text35       000000
__Htext36                     text36       000000
__Htext37                     text37       000000
__Htext38                     text38       000000
__Htext39                     text39       000000
__Htext4                      text4        000000
__Htext40                     text40       000000
__Htext41                     text41       000000
__Htext43                     text43       000000
__Htext44                     text44       000000
__Htext5                      text5        000000
__Htext6                      text6        000000
__Htext7                      text7        000000
__Htext8                      text8        000000
__Htext9                      text9        000000
__LRAM                        (abs)        000001
__Labs1                       abs1         000000
__Lbank0                      bank0        000000
__Lbank1                      bank1        000000
__Lbank2                      bank2        000000
__Lbank3                      bank3        000000
__Lbank4                      bank4        000000
__Lbank5                      bank5        000000
__Lbank6                      bank6        000000
__Lbank7                      bank7        000000
__Lbigbss                     bigbss       000000
__Lbigdata                    bigdata      000000
__Lbigram                     bigram       000000
__Lbss                        bss          000000
__LbssBANK0                   bssBANK0     000000
__LbssCOMRAM                  bssCOMRAM    000000
__Lcinit                      cinit        000000
__Lclrtext                    clrtext      000000
__Lcomram                     comram       000000
__Lconfig                     config       300000
__Lconst                      const        000000
__LcstackBANK0                cstackBANK0  000000
__LcstackCOMRAM               cstackCOMRAM 000000
__Ldata                       data         000000
__LdataBANK0                  dataBANK0    000000
__LdataBANK1                  dataBANK1    000000
__LdataBANK2                  dataBANK2    000000
__LdataBANK3                  dataBANK3    000000
__LdataBANK4                  dataBANK4    000000
__LdataBIGRAM                 dataBIGRAM   000000
__LdataCOMRAM                 dataCOMRAM   000000
__Leeprom_data                eeprom_data  000000
__Lfarbss                     farbss       000000
__Lfardata                    fardata      000000
__Libigdata                   ibigdata     000000
__Lidata                      idata        000000
__LidataBANK0                 idataBANK0   000000
__LidataBANK1                 idataBANK1   000000
__LidataBANK2                 idataBANK2   000000
__LidataBANK3                 idataBANK3   000000
__LidataBANK4                 idataBANK4   000000
__LidataBIGRAM                idataBIGRAM  000000
__LidataCOMRAM                idataCOMRAM  000000
__Lidloc                      idloc        200000
__Lifardata                   ifardata     000000
__Linit                       init         00000E
__Lintcode                    intcode      000008
__Lintcode_body               intcode_body 000000
__Lintcodelo                  intcodelo    00000E
__Lintentry                   intentry     000000
__Lintret                     intret       000000
__Lintsave_regs               intsave_regs 000000
__Lirdata                     irdata       000000
__Lmediumconst                mediumconst  0072BE
__LnvFARRAM                   nvFARRAM     000000
__Lnvbit                      nvbit        000000
__Lnvrram                     nvrram       000000
__Lparam                      rparam       000000
__Lpowerup                    powerup      00000E
__Lram                        ram          000000
__Lramtop                     ramtop       000800
__Lrbit                       rbit         000000
__Lrbss                       rbss         000000
__Lrdata                      rdata        000000
__Lreset_vec                  reset_vec    000000
__Lrparam                     rparam       000000
__Lsfr                        sfr          000000
__Lsmallconst                 smallconst   000000
__Lspace_0                    (abs)        000000
__Lspace_1                    (abs)        000000
__Lspace_2                    (abs)        000000
__Lstack                      stack        000000
__Lstruct                     struct       000000
__Ltemp                       temp         000057
__Ltext                       text         000000
__Ltext0                      text0        000000
__Ltext1                      text1        000000
__Ltext10                     text10       000000
__Ltext11                     text11       000000
__Ltext12                     text12       000000
__Ltext13                     text13       000000
__Ltext14                     text14       000000
__Ltext15                     text15       000000
__Ltext16                     text16       000000
__Ltext17                     text17       000000
__Ltext18                     text18       000000
__Ltext19                     text19       000000
__Ltext2                      text2        000000
__Ltext20                     text20       000000
__Ltext21                     text21       000000
__Ltext22                     text22       000000
__Ltext23                     text23       000000
__Ltext24                     text24       000000
__Ltext25                     text25       000000
__Ltext26                     text26       000000
__Ltext27                     text27       000000
__Ltext28                     text28       000000
__Ltext29                     text29       000000
__Ltext3                      text3        000000
__Ltext30                     text30       000000
__Ltext31                     text31       000000
__Ltext32                     text32       000000
__Ltext33                     text33       000000
__Ltext34                     text34       000000
__Ltext35                     text35       000000
__Ltext36                     text36       000000
__Ltext37                     text37       000000
__Ltext38                     text38       000000
__Ltext39                     text39       000000
__Ltext4                      text4        000000
__Ltext40                     text40       000000
__Ltext41                     text41       000000
__Ltext43                     text43       000000
__Ltext44                     text44       000000
__Ltext5                      text5        000000
__Ltext6                      text6        000000
__Ltext7                      text7        000000
__Ltext8                      text8        000000
__Ltext9                      text9        000000
__S0                          (abs)        30000E
__S1                          (abs)        0007FC
__S2                          (abs)        000000
___awdiv                      text41       001BDA
___awdiv@counter              cstackCOMRAM 00000B
___awdiv@dividend             cstackCOMRAM 000007
___awdiv@divisor              cstackCOMRAM 000009
___awdiv@quotient             cstackCOMRAM 00000D
___awdiv@sign                 cstackCOMRAM 00000C
___awmod                      text25       001F5E
___awmod@counter              cstackCOMRAM 00000B
___awmod@dividend             cstackCOMRAM 000007
___awmod@divisor              cstackCOMRAM 000009
___awmod@sign                 cstackCOMRAM 00000C
___inthi_sp                   stack        000000
___intlo_sp                   stack        000000
___param_bank                 (abs)        000000
___rparam_used                (abs)        000001
___sp                         stack        000000
__accesstop                   (abs)        000060
__activetblptr                (abs)        000002
__end_of_Font3x6              mediumconst  007F82
__end_of_Font8x8              mediumconst  007ABF
__end_of___awdiv              text41       001CC6
__end_of___awmod              text25       002036
__end_of__initialization      cinit        0018EA
__end_of_afficher_sequence    text19       002760
__end_of_animation            text36       002B44
__end_of_animationCaca        text35       002DA6
__end_of_animationDead        text34       002AA6
__end_of_animationDodo        text33       0019FE
__end_of_animationPasContent  text32       002A08
__end_of_bouger_sequence      text17       00251E
__end_of_collision            text16       00071A
__end_of_creer_champi         text15       002F68
__end_of_displayObject        text37       0016DE
__end_of_effacer_sequence     text18       0026A0
__end_of_game_play            text4        0003AA
__end_of_game_stats           text20       000CD2
__end_of_glcd_FillScreen      text30       002818
__end_of_glcd_Image           text31       0022BA
__end_of_glcd_Init            text3        00245A
__end_of_glcd_PlotPixel       text38       001F5E
__end_of_glcd_ReadByte        text40       002ED4
__end_of_glcd_SetCursor       text29       002D3C
__end_of_glcd_WriteByte       text39       002E8E
__end_of_glcd_WriteChar3x6    text28       001364
__end_of_glcd_WriteChar8X8    text27       001490
__end_of_glcd_WriteString     text26       0028C2
__end_of_isr                  intcode_body 0015B8
__end_of_itoa                 text22       0021E4
__end_of_lancer_minijeu       text12       000ED6
__end_of_main                 text0        00296A
__end_of_memset               text21       001094
__end_of_menu_actions         text6        00238C
__end_of_menu_cursor          text5        0017F0
__end_of_micro_calin          text10       002F8A
__end_of_micro_dormir         text11       002FAA
__end_of_micro_jeu            text9        002F18
__end_of_micro_laver          text8        002FD0
__end_of_micro_manger         text7        002E48
__end_of_micro_vieillir       text44       002FC8
__end_of_microgochi_init      text2        002F40
__end_of_ou                   mediumconst  007F8A
__end_of_remplir_tableau      text14       002C5A
__end_of_reverse              text23       002BD6
__end_of_saut_tamago          text13       001220
__end_of_screen_credits       text1        001E84
__end_of_strlen               text24       002DF8
__end_of_test                 mediumconst  007EBF
__end_ofi2___awmod            text43       00210E
__initialization              cinit        0017F0
__mediumconst                 mediumconst  0072BE
__pbssBANK0                   bssBANK0     0000D2
__pbssCOMRAM                  bssCOMRAM    00004E
__pcinit                      cinit        0017F0
__pcstackBANK0                cstackBANK0  0000E9
__pcstackCOMRAM               cstackCOMRAM 000001
__pdataBANK0                  dataBANK0    000060
__pdataBANK1                  dataBANK1    000100
__pdataBANK2                  dataBANK2    000200
__pdataBANK3                  dataBANK3    000300
__pdataBANK4                  dataBANK4    000400
__pdataBIGRAM                 dataBIGRAM   0004EE
__pdataCOMRAM                 dataCOMRAM   000053
__pidataBANK0                 idataBANK0   002C5A
__pidataBANK1                 idataBANK1   00251E
__pidataBANK2                 idataBANK2   001CC6
__pidataBANK3                 idataBANK3   0019FE
__pidataBANK4                 idataBANK4   001AEC
__pidataBIGRAM                idataBIGRAM  00071A
__pidataCOMRAM                idataCOMRAM  002FD0
__pintcode                    intcode      000008
__pintcode_body               intcode_body 001490
__pmediumconst                mediumconst  0072BE
__ptext0                      text0        0028C2
__ptext1                      text1        001DAA
__ptext10                     text10       002F68
__ptext11                     text11       002F8A
__ptext12                     text12       000CD2
__ptext13                     text13       001094
__ptext14                     text14       002BD6
__ptext15                     text15       002F40
__ptext16                     text16       0003AA
__ptext17                     text17       00245A
__ptext18                     text18       0025E0
__ptext19                     text19       0026A0
__ptext2                      text2        002F18
__ptext20                     text20       000A28
__ptext21                     text21       000ED6
__ptext22                     text22       00210E
__ptext23                     text23       002B44
__ptext24                     text24       002DA6
__ptext25                     text25       001F5E
__ptext26                     text26       002818
__ptext27                     text27       001364
__ptext28                     text28       001220
__ptext29                     text29       002CCC
__ptext3                      text3        00238C
__ptext30                     text30       002760
__ptext31                     text31       0021E4
__ptext32                     text32       00296A
__ptext33                     text33       0018F8
__ptext34                     text34       002A08
__ptext35                     text35       002D3C
__ptext36                     text36       002AA6
__ptext37                     text37       0015B8
__ptext38                     text38       001E84
__ptext39                     text39       002E48
__ptext4                      text4        000012
__ptext40                     text40       002E8E
__ptext41                     text41       001BDA
__ptext43                     text43       002036
__ptext44                     text44       002FAA
__ptext5                      text5        0016DE
__ptext6                      text6        0022BA
__ptext7                      text7        002DF8
__ptext8                      text8        002FC8
__ptext9                      text9        002ED4
__ramtop                      ramtop       000800
__size_of___awdiv             (abs)        000000
__size_of___awmod             (abs)        000000
__size_of_afficher_sequence   (abs)        000000
__size_of_animation           (abs)        000000
__size_of_animationCaca       (abs)        000000
__size_of_animationDead       (abs)        000000
__size_of_animationDodo       (abs)        000000
__size_of_animationPasContent (abs)        000000
__size_of_bouger_sequence     (abs)        000000
__size_of_collision           (abs)        000000
__size_of_creer_champi        (abs)        000000
__size_of_displayObject       (abs)        000000
__size_of_effacer_sequence    (abs)        000000
__size_of_game_play           (abs)        000000
__size_of_game_stats          (abs)        000000
__size_of_glcd_FillScreen     (abs)        000000
__size_of_glcd_Image          (abs)        000000
__size_of_glcd_Init           (abs)        000000
__size_of_glcd_PlotPixel      (abs)        000000
__size_of_glcd_ReadByte       (abs)        000000
__size_of_glcd_SetCursor      (abs)        000000
__size_of_glcd_WriteByte      (abs)        000000
__size_of_glcd_WriteChar3x6   (abs)        000000
__size_of_glcd_WriteChar8X8   (abs)        000000
__size_of_glcd_WriteString    (abs)        000000
__size_of_isr                 (abs)        000000
__size_of_itoa                (abs)        000000
__size_of_lancer_minijeu      (abs)        000000
__size_of_main                (abs)        000000
__size_of_memset              (abs)        000000
__size_of_menu_actions        (abs)        000000
__size_of_menu_cursor         (abs)        000000
__size_of_micro_calin         (abs)        000000
__size_of_micro_dormir        (abs)        000000
__size_of_micro_jeu           (abs)        000000
__size_of_micro_laver         (abs)        000000
__size_of_micro_manger        (abs)        000000
__size_of_micro_vieillir      (abs)        000000
__size_of_microgochi_init     (abs)        000000
__size_of_remplir_tableau     (abs)        000000
__size_of_reverse             (abs)        000000
__size_of_saut_tamago         (abs)        000000
__size_of_screen_credits      (abs)        000000
__size_of_strlen              (abs)        000000
__size_ofi2___awmod           (abs)        000000
__smallconst                  smallconst   000000
_afficher_sequence            text19       0026A0
_animation                    text36       002AA6
_animationCaca                text35       002D3C
_animationDead                text34       002A08
_animationDodo                text33       0018F8
_animationPasContent          text32       00296A
_bouger_sequence              text17       00245A
_buffer                       bssCOMRAM    000050
_champi                       dataBANK2    000200
_colli                        bssBANK0     0000E3
_collision                    text16       0003AA
_cpt                          bssBANK0     0000E7
_creer_champi                 text15       002F40
_cursor                       dataBANK0    000064
_direction                    bssBANK0     0000E5
_displayObject                text37       0015B8
_effacer_sequence             text18       0025E0
_game_play                    text4        000012
_game_stats                   text20       000A28
_glcd_FillScreen              text30       002760
_glcd_Image                   text31       0021E4
_glcd_Init                    text3        00238C
_glcd_PlotPixel               text38       001E84
_glcd_ReadByte                text40       002E8E
_glcd_SetCursor               text29       002CCC
_glcd_WriteByte               text39       002E48
_glcd_WriteChar3x6            text28       001220
_glcd_WriteChar8X8            text27       001364
_glcd_WriteString             text26       002818
_gochiDodo                    dataBANK0    0000C2
_gochiMort                    dataBANK0    00009A
_gochiPasContent              dataBANK1    0001A2
_gochi_corps                  dataBIGRAM   0004EE
_gochi_oreilles1              dataBANK3    000300
_gochi_oreilles2              dataBANK4    000400
_gochi_yeux1                  dataBANK2    00027E
_isr                          intcode      000008
_itoa                         text22       00210E
_lancer_minijeu               text12       000CD2
_mGogo                        bssBANK0     0000D2
_main                         text0        0028C2
_memset                       text21       000ED6
_menu_actions                 text6        0022BA
_menu_cursor                  text5        0016DE
_micro_calin                  text10       002F68
_micro_dormir                 text11       002F8A
_micro_jeu                    text9        002ED4
_micro_laver                  text8        002FC8
_micro_manger                 text7        002DF8
_micro_vieillir               text44       002FAA
_microgochi_init              text2        002F18
_mouche                       dataBANK0    000082
_ou                           mediumconst  007F82
_remplir_tableau              text14       002BD6
_reverse                      text23       002B44
_saut_tamago                  text13       001094
_score                        dataCOMRAM   000053
_screen_credits               text1        001DAA
_strlen                       text24       002DA6
_tab                          bssBANK0     0000DB
_taille                       dataCOMRAM   000055
_tamago                       dataBANK1    000100
_tamago_hauteur               dataBANK0    000060
_tamago_largeur               dataBANK0    000062
_test                         mediumconst  007ABF
_x                            bssCOMRAM    00004F
_y                            bssCOMRAM    00004E
afficher_sequence@i           cstackCOMRAM 000033
bouger_sequence@i             cstackCOMRAM 000038
btemp                         temp         000057
collision@i                   cstackCOMRAM 000046
collision@i_1001              cstackCOMRAM 000044
creer_champi@new_champi       cstackCOMRAM 00000C
creer_champi@x                cstackCOMRAM 00000B
creer_champi@y                cstackCOMRAM 000007
displayObject@height          cstackCOMRAM 00001E
displayObject@i               cstackCOMRAM 000029
displayObject@j               cstackCOMRAM 00002B
displayObject@nb              cstackCOMRAM 000027
displayObject@tab             cstackCOMRAM 000018
displayObject@width           cstackCOMRAM 000020
displayObject@write           cstackCOMRAM 000022
displayObject@x               cstackCOMRAM 00001A
displayObject@y               cstackCOMRAM 00001C
effacer_sequence@i            cstackCOMRAM 000033
end_of_initialization         cinit        0018EA
game_play@action              cstackBANK0  0000EF
game_play@button_pressed      cstackBANK0  0000ED
game_play@cpt_dodo            cstackBANK0  0000EB
game_play@write               cstackBANK0  0000E9
game_stats@sortie_enable      cstackCOMRAM 00001E
glcd_FillScreen@color         cstackCOMRAM 000011
glcd_FillScreen@i             cstackCOMRAM 000013
glcd_FillScreen@j             cstackCOMRAM 000012
glcd_Image@cs                 cstackCOMRAM 000015
glcd_Image@i                  cstackCOMRAM 000014
glcd_Image@j                  cstackCOMRAM 000013
glcd_Image@ptr                cstackCOMRAM 000011
glcd_Init@mode                cstackCOMRAM 000015
glcd_PlotPixel@color          cstackCOMRAM 000012
glcd_PlotPixel@data           cstackCOMRAM 000016
glcd_PlotPixel@side           cstackCOMRAM 000017
glcd_PlotPixel@xpos           cstackCOMRAM 000015
glcd_PlotPixel@ypos           cstackCOMRAM 000011
glcd_ReadByte@data            cstackCOMRAM 000008
glcd_ReadByte@side            cstackCOMRAM 000007
glcd_SetCursor@side           cstackCOMRAM 000012
glcd_SetCursor@xpos           cstackCOMRAM 000013
glcd_SetCursor@ypos           cstackCOMRAM 000011
glcd_WriteByte@data           cstackCOMRAM 00000F
glcd_WriteByte@side           cstackCOMRAM 000010
glcd_WriteChar3x6@ch          cstackCOMRAM 000015
glcd_WriteChar3x6@color       cstackCOMRAM 000011
glcd_WriteChar3x6@i           cstackCOMRAM 000016
glcd_WriteChar3x6@side        cstackCOMRAM 000017
glcd_WriteChar3x6@xpos        cstackCOMRAM 000014
glcd_WriteChar8X8@ch          cstackCOMRAM 000014
glcd_WriteChar8X8@chr         cstackCOMRAM 000015
glcd_WriteChar8X8@color       cstackCOMRAM 000011
glcd_WriteChar8X8@i           cstackCOMRAM 000018
glcd_WriteChar8X8@side        cstackCOMRAM 000019
glcd_WriteChar8X8@xpos        cstackCOMRAM 000017
glcd_WriteString@color        cstackCOMRAM 00001D
glcd_WriteString@font         cstackCOMRAM 00001C
glcd_WriteString@str          cstackCOMRAM 00001A
i2___awmod                    text43       002036
i2___awmod@counter            cstackCOMRAM 000005
i2___awmod@dividend           cstackCOMRAM 000001
i2___awmod@divisor            cstackCOMRAM 000003
i2___awmod@sign               cstackCOMRAM 000006
int$flags                     temp         000057
int_func                      intcode_body 001490
intlevel0                     text         000000
intlevel1                     text         000000
intlevel2                     text         000000
intlevel3                     text         000000
itoa@i                        cstackCOMRAM 00001B
itoa@n                        cstackCOMRAM 000015
itoa@s                        cstackCOMRAM 000017
itoa@sign                     cstackCOMRAM 000019
main@bool_jeu                 cstackCOMRAM 00004C
memset@c                      cstackCOMRAM 000009
memset@dest                   cstackCOMRAM 000007
memset@k                      cstackCOMRAM 000011
memset@n                      cstackCOMRAM 00000B
memset@s                      cstackCOMRAM 000013
menu_actions@action           cstackCOMRAM 000048
menu_cursor@action            cstackCOMRAM 00002D
menu_cursor@write             cstackCOMRAM 00002F
remplir_tableau@i             cstackCOMRAM 000013
remplir_tableau@x             cstackCOMRAM 000012
reverse@c                     cstackCOMRAM 000010
reverse@i                     cstackCOMRAM 000011
reverse@j                     cstackCOMRAM 000013
reverse@s                     cstackCOMRAM 00000D
saut_tamago@a                 cstackCOMRAM 00003A
saut_tamago@i                 cstackCOMRAM 00003C
stackhi                       (abs)        0001FF
stacklo                       (abs)        0001C2
start                         init         00000E
start_initialization          cinit        0017F0
strlen@a                      cstackCOMRAM 00000B
strlen@s                      cstackCOMRAM 000007
ttemp5                        temp         000058
ttemp6                        temp         00005B
ttemp7                        temp         00005F
wtemp8                        temp         000058


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 47 in file "main.c"
 Parameters:    Size  Location     Type
  argc            2    8[BANK0 ] int 
  argv            3   10[BANK0 ] PTR PTR unsigned char 
 Auto vars:     Size  Location     Type
  bool_jeu        2   75[COMRAM] int 
 Return value:  Size  Location     Type
                  2    8[BANK0 ] int 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       5       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         4       5       0       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels required when called:   11
 This function calls:
		_game_play
		_glcd_Init
		_microgochi_init
		_screen_credits
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _screen_credits *****************
 Defined at:
		line 25 in file "screen.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_glcd_FillScreen
		_glcd_SetCursor
		_glcd_WriteString
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _microgochi_init *****************
 Defined at:
		line 14 in file "microgochi.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _glcd_Init *****************
 Defined at:
		line 341 in file "glcd.c"
 Parameters:    Size  Location     Type
  mode            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  mode            1   20[COMRAM] unsigned char 
  k               1    0        unsigned char 
  j               1    0        unsigned char 
  i               1    0        unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_glcd_FillScreen
		_glcd_WriteByte
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _game_play *****************
 Defined at:
		line 23 in file "game.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  action          2    6[BANK0 ] int 
  button_press    2    4[BANK0 ] int 
  cpt_dodo        2    2[BANK0 ] int 
  write           2    0[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       8       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       8       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:   10
 This function calls:
		_animation
		_animationCaca
		_animationDead
		_animationDodo
		_animationPasContent
		_displayObject
		_glcd_FillScreen
		_glcd_Image
		_glcd_SetCursor
		_glcd_WriteString
		_menu_actions
		_menu_cursor
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _menu_cursor *****************
 Defined at:
		line 18 in file "menu.c"
 Parameters:    Size  Location     Type
  action          2   44[COMRAM] int 
  write           2   46[COMRAM] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_displayObject
 This function is called by:
		_game_play
 This function uses a non-reentrant model


 *************** function _menu_actions *****************
 Defined at:
		line 39 in file "menu.c"
 Parameters:    Size  Location     Type
  action          2   71[COMRAM] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_game_stats
		_lancer_minijeu
		_micro_calin
		_micro_dormir
		_micro_jeu
		_micro_laver
		_micro_manger
 This function is called by:
		_game_play
 This function uses a non-reentrant model


 *************** function _micro_manger *****************
 Defined at:
		line 39 in file "microgochi.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_menu_actions
 This function uses a non-reentrant model


 *************** function _micro_laver *****************
 Defined at:
		line 62 in file "microgochi.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_menu_actions
 This function uses a non-reentrant model


 *************** function _micro_jeu *****************
 Defined at:
		line 78 in file "microgochi.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_micro_calin
 This function is called by:
		_menu_actions
 This function uses a non-reentrant model


 *************** function _micro_calin *****************
 Defined at:
		line 53 in file "microgochi.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_micro_jeu
		_menu_actions
 This function uses a non-reentrant model


 *************** function _micro_dormir *****************
 Defined at:
		line 67 in file "microgochi.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_menu_actions
 This function uses a non-reentrant model


 *************** function _lancer_minijeu *****************
 Defined at:
		line 197 in file "minijeu.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_bouger_sequence
		_collision
		_displayObject
		_glcd_FillScreen
		_glcd_SetCursor
		_glcd_WriteString
		_itoa
		_remplir_tableau
		_saut_tamago
 This function is called by:
		_menu_actions
 This function uses a non-reentrant model


 *************** function _saut_tamago *****************
 Defined at:
		line 86 in file "minijeu.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2   59[COMRAM] int 
  a               2   57[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_bouger_sequence
		_displayObject
		_glcd_SetCursor
		_glcd_WriteString
		_itoa
		_memset
 This function is called by:
		_lancer_minijeu
 This function uses a non-reentrant model


 *************** function _remplir_tableau *****************
 Defined at:
		line 46 in file "minijeu.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2   18[COMRAM] int 
  x               1   17[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_creer_champi
 This function is called by:
		_lancer_minijeu
 This function uses a non-reentrant model


 *************** function _creer_champi *****************
 Defined at:
		line 37 in file "minijeu.c"
 Parameters:    Size  Location     Type
  x               1    wreg     unsigned char 
  y               1    6[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  x               1   10[COMRAM] unsigned char 
  new_champi      4   11[COMRAM] struct champi
 Return value:  Size  Location     Type
                  4    6[COMRAM] struct champi
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         5       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_remplir_tableau
 This function uses a non-reentrant model


 *************** function _collision *****************
 Defined at:
		line 119 in file "minijeu.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2   67[COMRAM] int 
  i               2   69[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:         10       0       0       0       0       0       0       0       0
      Totals:        14       0       0       0       0       0       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_bouger_sequence
		_displayObject
		_glcd_SetCursor
		_glcd_WriteString
		_itoa
		_memset
 This function is called by:
		_lancer_minijeu
 This function uses a non-reentrant model


 *************** function _bouger_sequence *****************
 Defined at:
		line 73 in file "minijeu.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2   55[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_afficher_sequence
		_effacer_sequence
 This function is called by:
		_saut_tamago
		_collision
		_lancer_minijeu
 This function uses a non-reentrant model


 *************** function _effacer_sequence *****************
 Defined at:
		line 64 in file "minijeu.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2   50[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          6       0       0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_displayObject
 This function is called by:
		_bouger_sequence
 This function uses a non-reentrant model


 *************** function _afficher_sequence *****************
 Defined at:
		line 55 in file "minijeu.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2   50[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          6       0       0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_displayObject
 This function is called by:
		_bouger_sequence
 This function uses a non-reentrant model


 *************** function _game_stats *****************
 Defined at:
		line 136 in file "game.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  sortie_enabl    2   29[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_glcd_FillScreen
		_glcd_SetCursor
		_glcd_WriteString
		_itoa
		_memset
 This function is called by:
		_menu_actions
 This function uses a non-reentrant model


 *************** function _memset *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c"
 Parameters:    Size  Location     Type
  dest            2    6[COMRAM] PTR void 
		 -> buffer(3), 
  c               2    8[COMRAM] int 
  n               2   10[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  s               2   18[COMRAM] PTR unsigned char 
		 -> buffer(3), 
  k               2   16[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  2    6[COMRAM] PTR void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         6       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0       0       0
      Totals:        14       0       0       0       0       0       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_game_stats
		_saut_tamago
		_collision
 This function uses a non-reentrant model


 *************** function _itoa *****************
 Defined at:
		line 14 in file "itoa.c"
 Parameters:    Size  Location     Type
  n               2   20[COMRAM] int 
  s               2   22[COMRAM] PTR unsigned char 
		 -> buffer(3), 
 Auto vars:     Size  Location     Type
  i               2   26[COMRAM] int 
  sign            2   24[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___awdiv
		___awmod
		_reverse
 This function is called by:
		_game_stats
		_saut_tamago
		_collision
		_lancer_minijeu
 This function uses a non-reentrant model


 *************** function _reverse *****************
 Defined at:
		line 31 in file "itoa.c"
 Parameters:    Size  Location     Type
  s               2   12[COMRAM] PTR unsigned char 
		 -> buffer(3), 
 Auto vars:     Size  Location     Type
  j               2   18[COMRAM] int 
  i               2   16[COMRAM] int 
  c               1   15[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         5       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_strlen
 This function is called by:
		_itoa
 This function uses a non-reentrant model


 *************** function _strlen *****************
 Defined at:
		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
 Parameters:    Size  Location     Type
  s               2    6[COMRAM] PTR const unsigned char 
		 -> buffer(3), 
 Auto vars:     Size  Location     Type
  a               2   10[COMRAM] PTR const unsigned char 
		 -> buffer(3), 
 Return value:  Size  Location     Type
                  2    6[COMRAM] unsigned int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_reverse
 This function uses a non-reentrant model


 *************** function ___awmod *****************
 Defined at:
		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
 Parameters:    Size  Location     Type
  dividend        2    6[COMRAM] int 
  divisor         2    8[COMRAM] int 
 Auto vars:     Size  Location     Type
  sign            1   11[COMRAM] unsigned char 
  counter         1   10[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2    6[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_itoa
 This function uses a non-reentrant model


 *************** function _glcd_WriteString *****************
 Defined at:
		line 670 in file "glcd.c"
 Parameters:    Size  Location     Type
  str             2   25[COMRAM] PTR const unsigned char 
		 -> STR_21(5), STR_20(7), STR_19(4), STR_18(5), 
		 -> STR_17(7), STR_16(5), STR_15(4), STR_14(6), 
		 -> STR_13(5), STR_12(7), STR_11(6), STR_10(6), 
		 -> STR_9(7), STR_8(5), STR_7(8), STR_6(7), 
		 -> STR_5(9), buffer(3), STR_4(6), STR_3(9), 
		 -> STR_2(7), STR_1(4), 
  font            1   27[COMRAM] unsigned char 
  color           1   28[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_glcd_WriteChar3x6
		_glcd_WriteChar8X8
 This function is called by:
		_game_play
		_game_stats
		_screen_credits
		_saut_tamago
		_collision
		_lancer_minijeu
		_glcd_text_write
 This function uses a non-reentrant model


 *************** function _glcd_WriteChar8X8 *****************
 Defined at:
		line 576 in file "glcd.c"
 Parameters:    Size  Location     Type
  ch              1    wreg     unsigned char 
  color           1   16[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  ch              1   19[COMRAM] unsigned char 
  chr             2   20[COMRAM] unsigned int 
  side            1   24[COMRAM] unsigned char 
  i               1   23[COMRAM] unsigned char 
  xpos            1   22[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         1       0       0       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_glcd_WriteByte
 This function is called by:
		_glcd_WriteString
 This function uses a non-reentrant model


 *************** function _glcd_WriteChar3x6 *****************
 Defined at:
		line 624 in file "glcd.c"
 Parameters:    Size  Location     Type
  ch              1    wreg     unsigned char 
  color           1   16[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  ch              1   20[COMRAM] unsigned char 
  side            1   22[COMRAM] unsigned char 
  i               1   21[COMRAM] unsigned char 
  xpos            1   19[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         1       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_glcd_WriteByte
 This function is called by:
		_glcd_WriteString
 This function uses a non-reentrant model


 *************** function _glcd_SetCursor *****************
 Defined at:
		line 551 in file "glcd.c"
 Parameters:    Size  Location     Type
  xpos            1    wreg     unsigned char 
  ypos            1   16[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  xpos            1   18[COMRAM] unsigned char 
  side            1   17[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         1       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_glcd_WriteByte
 This function is called by:
		_game_play
		_game_stats
		_screen_credits
		_saut_tamago
		_collision
		_lancer_minijeu
		_glcd_text_write
 This function uses a non-reentrant model


 *************** function _glcd_FillScreen *****************
 Defined at:
		line 527 in file "glcd.c"
 Parameters:    Size  Location     Type
  color           1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  color           1   16[COMRAM] unsigned char 
  i               1   18[COMRAM] unsigned char 
  j               1   17[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_glcd_WriteByte
 This function is called by:
		_game_play
		_game_stats
		_screen_credits
		_glcd_Init
		_lancer_minijeu
 This function uses a non-reentrant model


 *************** function _glcd_Image *****************
 Defined at:
		line 697 in file "glcd.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  ptr             2   16[COMRAM] int 
  cs              1   20[COMRAM] unsigned char 
  i               1   19[COMRAM] unsigned char 
  j               1   18[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         5       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_glcd_WriteByte
 This function is called by:
		_game_play
 This function uses a non-reentrant model


 *************** function _animationPasContent *****************
 Defined at:
		line 316 in file "game.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_displayObject
 This function is called by:
		_game_play
 This function uses a non-reentrant model


 *************** function _animationDodo *****************
 Defined at:
		line 259 in file "game.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_displayObject
 This function is called by:
		_game_play
 This function uses a non-reentrant model


 *************** function _animationDead *****************
 Defined at:
		line 304 in file "game.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_displayObject
 This function is called by:
		_game_play
 This function uses a non-reentrant model


 *************** function _animationCaca *****************
 Defined at:
		line 284 in file "game.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_displayObject
 This function is called by:
		_game_play
 This function uses a non-reentrant model


 *************** function _animation *****************
 Defined at:
		line 224 in file "game.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_displayObject
 This function is called by:
		_game_play
 This function uses a non-reentrant model


 *************** function _displayObject *****************
 Defined at:
		line 13 in file "myglcd.c"
 Parameters:    Size  Location     Type
  tab             2   23[COMRAM] PTR unsigned char 
		 -> tamago(126), cursor(30), gochiPasContent(32), gochiMort(24), 
		 -> gochiDodo(16), gochi_yeux1(102), gochi_oreilles1(238), gochi_corps(782), 
		 -> mouche(24), champi(126), Z2(16), Z1(36), 
  x               2   25[COMRAM] int 
  y               2   27[COMRAM] int 
  height          2   29[COMRAM] int 
  width           2   31[COMRAM] int 
  write           2   33[COMRAM] int 
 Auto vars:     Size  Location     Type
  j               2   42[COMRAM] int 
  i               2   40[COMRAM] int 
  nb              2   38[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:        12       0       0       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0       0       0
      Totals:        21       0       0       0       0       0       0       0       0
Total ram usage:       21 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_glcd_PlotPixel
 This function is called by:
		_game_play
		_animation
		_animationDodo
		_animationCaca
		_animationDead
		_animationPasContent
		_menu_cursor
		_afficher_sequence
		_effacer_sequence
		_saut_tamago
		_collision
		_lancer_minijeu
 This function uses a non-reentrant model


 *************** function _glcd_PlotPixel *****************
 Defined at:
		line 468 in file "glcd.c"
 Parameters:    Size  Location     Type
  xpos            1    wreg     unsigned char 
  ypos            1   16[COMRAM] unsigned char 
  color           1   17[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  xpos            1   20[COMRAM] unsigned char 
  side            1   22[COMRAM] unsigned char 
  data            1   21[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___awdiv
		_glcd_ReadByte
		_glcd_WriteByte
 This function is called by:
		_displayObject
		_glcd_Rect
 This function uses a non-reentrant model


 *************** function _glcd_WriteByte *****************
 Defined at:
		line 395 in file "glcd.c"
 Parameters:    Size  Location     Type
  side            1    wreg     unsigned char 
  data            1   14[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  side            1   15[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         1       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_glcd_Init
		_glcd_PlotPixel
		_glcd_FillScreen
		_glcd_SetCursor
		_glcd_WriteChar8X8
		_glcd_WriteChar3x6
		_glcd_Image
		_glcd_icon8X8
 This function uses a non-reentrant model


 *************** function _glcd_ReadByte *****************
 Defined at:
		line 431 in file "glcd.c"
 Parameters:    Size  Location     Type
  side            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  side            1    6[COMRAM] unsigned char 
  data            1    7[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_glcd_PlotPixel
 This function uses a non-reentrant model


 *************** function ___awdiv *****************
 Defined at:
		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
 Parameters:    Size  Location     Type
  dividend        2    6[COMRAM] int 
  divisor         2    8[COMRAM] int 
 Auto vars:     Size  Location     Type
  quotient        2   12[COMRAM] int 
  sign            1   11[COMRAM] unsigned char 
  counter         1   10[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2    6[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_glcd_PlotPixel
		_itoa
 This function uses a non-reentrant model


 *************** function _isr *****************
 Defined at:
		line 142 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_micro_vieillir
		i2___awmod
 This function is called by:
		Interrupt level 2
 This function uses a non-reentrant model


 *************** function i2___awmod *****************
 Defined at:
		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
 Parameters:    Size  Location     Type
  dividend        2    0[COMRAM] int 
  divisor         2    2[COMRAM] int 
 Auto vars:     Size  Location     Type
  __awmod         1    5[COMRAM] unsigned char 
  __awmod         1    4[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2    0[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_isr
 This function uses a non-reentrant model


 *************** function _micro_vieillir *****************
 Defined at:
		line 29 in file "microgochi.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_isr
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
minijeu.c
		_creer_champi  		CODE           	2F40	0000	41
		_afficher_sequence		CODE           	26A0	0000	193
		_collision     		CODE           	03AA	0000	881
		_effacer_sequence		CODE           	25E0	0000	193
		_saut_tamago   		CODE           	1094	0000	397
		_remplir_tableau		CODE           	2BD6	0000	133
		_lancer_minijeu		CODE           	0CD2	0000	517
		_bouger_sequence		CODE           	245A	0000	197

minijeu.c estimated size: 2552

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c
		___awmod       		CODE           	1F5E	0000	217

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c estimated size: 217

microgochi.c
		_microgochi_init		CODE           	2F18	0000	41
		_micro_dormir  		CODE           	2F8A	0000	33
		_micro_jeu     		CODE           	2ED4	0000	69
		_micro_manger  		CODE           	2DF8	0000	81
		_micro_calin   		CODE           	2F68	0000	35
		_micro_laver   		CODE           	2FC8	0000	9
		_micro_vieillir		CODE           	2FAA	0000	31

microgochi.c estimated size: 299

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c
		_strlen        		CODE           	2DA6	0000	83

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c estimated size: 83

screen.c
		_screen_credits		CODE           	1DAA	0000	219

screen.c estimated size: 219

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c
		_memset        		CODE           	0ED6	0000	447

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c estimated size: 447

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c
		___awdiv       		CODE           	1BDA	0000	237

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c estimated size: 237

shared
		_Font3x6       		MEDIUMCONST    	7EBF	0000	196
		_Font8x8       		MEDIUMCONST    	72BF	0000	2049
		_test          		MEDIUMCONST    	7ABF	0000	1025
		__initialization		CODE           	17F0	0000	251
		i2___awmod     		CODE           	2036	0000	217
		_ou            		MEDIUMCONST    	7F82	0000	9

shared estimated size: 3747

game.c
		_animation     		CODE           	2AA6	0000	159
		_animationCaca 		CODE           	2D3C	0000	107
		_animationDead 		CODE           	2A08	0000	159
		_animationDodo 		CODE           	18F8	0000	263
		_game_stats    		CODE           	0A28	0000	683
		_game_play     		CODE           	0012	0000	921
		_animationPasContent		CODE           	296A	0000	159

game.c estimated size: 2451

glcd.c
		_glcd_SetCursor		CODE           	2CCC	0000	113
		_glcd_WriteString		CODE           	2818	0000	171
		_glcd_WriteByte		CODE           	2E48	0000	71
		_glcd_Init     		CODE           	238C	0000	207
		_glcd_ReadByte 		CODE           	2E8E	0000	71
		_glcd_WriteChar8X8		CODE           	1364	0000	301
		_glcd_FillScreen		CODE           	2760	0000	185
		_glcd_WriteChar3x6		CODE           	1220	0000	325
		_glcd_PlotPixel		CODE           	1E84	0000	219
		_glcd_Image    		CODE           	21E4	0000	215

glcd.c estimated size: 1878

myglcd.c
		_displayObject 		CODE           	15B8	0000	295

myglcd.c estimated size: 295

menu.c
		_menu_actions  		CODE           	22BA	0000	211
		_menu_cursor   		CODE           	16DE	0000	275

menu.c estimated size: 486

itoa.c
		_itoa          		CODE           	210E	0000	215
		_reverse       		CODE           	2B44	0000	147

itoa.c estimated size: 362

main.c
		_main          		CODE           	28C2	0000	169
		_isr           		CODE           	0008	0000	303

main.c estimated size: 472

