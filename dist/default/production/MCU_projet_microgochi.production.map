Microchip MPLAB XC8 Compiler V2.00 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v2.00\pic\dat\en_msgs.txt \
  -cs -h+dist/default/production\MCU_projet_microgochi.production.sym \
  --cmf=dist/default/production\MCU_projet_microgochi.production.cmf -z \
  -Q18F4550 -oC:\Users\X250\AppData\Local\Temp\s530.2 \
  --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/MCU_projet_microgochi.production.map -E1 \
  -ver=XC8 --acfsm=1493 -ASTACK=017Eh-07ffh -pstack=STACK -ACODE=00h-07FFFh \
  -ACONST=00h-07FFFh -ASMALLCONST=0800h-08FFhx120 \
  -AMEDIUMCONST=0800h-07FFFh -ACOMRAM=01h-05Fh -AABS1=00h-07FFh \
  -ABIGRAM=01h-07FFh -ARAM=060h-0FFh,0100h-01FFhx7 -ABANK0=060h-0FFh \
  -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh -ABANK3=0300h-03FFh \
  -ABANK4=0400h-04FFh -ABANK5=0500h-05FFh -ABANK6=0600h-06FFh \
  -ABANK7=0700h-07FFh -ASFR=0F60h-0FFFh \
  -preset_vec=00h,intcode=08h,intcodelo,powerup,init -pramtop=0800h \
  -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST -pconst=CONST \
  -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\X250\AppData\Local\Temp\s530.o \
  dist/default/production\MCU_projet_microgochi.production.o 

Object code version is 3.11

Machine type is 18F4550

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\X250\AppData\Local\Temp\s530.o
                init                                  E        E        4        4       0
                reset_vec                             0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production\MCU_projet_microgochi.production.o
                intcode                               8        8        6        4       0
                temp                                 5C       5C        1        1       1
                mediumconst                        7254     7254      DAC     392A       0
                intcode_body                       1E46     1E46       30        4       0
                text34                             1E00     1E00       46        4       0
                text33                             1458     1458       D6        4       0
                text32                             1840     1840       B8        4       0
                text31                             1CF8     1CF8       70        4       0
                text30                              B5E      B5E      144        4       0
                text29                              CA2      CA2      12C        4       0
                text28                             19AA     19AA       AA        4       0
                text27                             100A     100A       EC        4       0
                text26                             12AA     12AA       D8        4       0
                text25                             1D68     1D68       52        4       0
                text24                             1A54     1A54       92        4       0
                text23                             1382     1382       D6        4       0
                text22                              6F2      6F2      1BE        4       0
                text21                              51C      51C      1D6        4       0
                text20                             1DBA     1DBA       46        4       0
                text19                             11D0     11D0       DA        4       0
                text18                              8B0      8B0      166        4       0
                text17                             1780     1780       C0        4       0
                text16                             16C0     16C0       C0        4       0
                text15                             15FC     15FC       C4        4       0
                text14                               12       12      316        4       0
                text13                             1E76     1E76       28        4       0
                text12                             1BF6     1BF6       84        4       0
                text11                              DCE      DCE      12A        4       0
                text10                              A16      A16      148        4       0
                text9                              1EF0     1EF0        8        4       0
                text8                              1EE8     1EE8        8        4       0
                text7                              1EE0     1EE0        8        4       0
                text6                              18F8     18F8       B2        4       0
                text5                               EF8      EF8      112        4       0
                text4                               328      328      1F4        4       0
                text3                              152E     152E       CE        4       0
                text2                              1EC0     1EC0       20        4       0
                text1                              10F6     10F6       DA        4       0
                text0                              1AE6     1AE6       8C        4       0
                cstackCOMRAM                          1        1       52        1       1
                dataBANK1                           100      100       7E      100       1
                dataBANK0                            60       60       22       60       1
                bssBANK0                             82       82       15       60       1
                dataCOMRAM                           58       58        4        1       1
                bssCOMRAM                            53       53        5        1       1
                cinit                              1B72     1B72       84        4       0
                idataBANK1                         1C7A     1C7A       7E        4       0
                idataBANK0                         1E9E     1E9E       22        4       0
                idataCOMRAM                        1EF8     1EF8        4        4       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                intcode                               8        8        6         0
                init                                  E        E        4         0
                reset_vec                             0        0        4         0
                intcode_body                       1E46     1E46       30         0
                text34                             1E00     1E00       46         0
                text33                             1458     1458       D6         0
                text32                             1840     1840       B8         0
                text31                             1CF8     1CF8       70         0
                text30                              B5E      B5E      144         0
                text29                              CA2      CA2      12C         0
                text28                             19AA     19AA       AA         0
                text27                             100A     100A       EC         0
                text26                             12AA     12AA       D8         0
                text25                             1D68     1D68       52         0
                text24                             1A54     1A54       92         0
                text23                             1382     1382       D6         0
                text22                              6F2      6F2      1BE         0
                text21                              51C      51C      1D6         0
                text20                             1DBA     1DBA       46         0
                text19                             11D0     11D0       DA         0
                text18                              8B0      8B0      166         0
                text17                             1780     1780       C0         0
                text16                             16C0     16C0       C0         0
                text15                             15FC     15FC       C4         0
                text14                               12       12      316         0
                text13                             1E76     1E76       28         0
                text12                             1BF6     1BF6       84         0
                text11                              DCE      DCE      12A         0
                text10                              A16      A16      148         0
                text9                              1EF0     1EF0        8         0
                text8                              1EE8     1EE8        8         0
                text7                              1EE0     1EE0        8         0
                text6                              18F8     18F8       B2         0
                text5                               EF8      EF8      112         0
                text4                               328      328      1F4         0
                text3                              152E     152E       CE         0
                text2                              1EC0     1EC0       20         0
                text1                              10F6     10F6       DA         0
                text0                              1AE6     1AE6       8C         0
                cinit                              1B72     1B72       84         0
                idataBANK1                         1C7A     1C7A       7E         0
                idataBANK0                         1E9E     1E9E       22         0
                idataCOMRAM                        1EF8     1EF8        4         0

        CLASS   CONST          

        CLASS   SMALLCONST     

        CLASS   MEDIUMCONST    
                mediumconst                        7254     7254      DAC         0

        CLASS   COMRAM         
                temp                                 5C       5C        1         1
                cstackCOMRAM                          1        1       52         1
                dataCOMRAM                           58       58        4         1
                bssCOMRAM                            53       53        5         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          
                dataBANK0                            60       60       22         1
                bssBANK0                             82       82       15         1

        CLASS   BANK1          
                dataBANK1                           100      100       7E         1

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   BANK4          

        CLASS   BANK5          

        CLASS   BANK6          

        CLASS   BANK7          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  00005C  00005D         1       1  COMRAM  
                intcode                        000008  001EF4  001EFC         4       0  CODE    
                dataBANK0                      000060  000037  000097        60       1  BANK0   
                dataBANK1                      000100  00007E  00017E       100       1  BANK1   
                mediumconst                    007254  000DAC  008000      392A       0  MEDIUMCO
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            000097-0000FF               69
        BANK1            00017E-0001FF               82
        BANK2            000200-0002FF              100
        BANK3            000300-0003FF              100
        BANK4            000400-0004FF              100
        BANK5            000500-0005FF              100
        BANK6            000600-0006FF              100
        BANK7            000700-0007FF              100
        BIGRAM           00005D-00005F                3
                         000097-0000FF               69
                         00017E-0007FF              682
        CODE             000004-000007                4
                         001EFC-007253             5358
        COMRAM           00005D-00005F                3
        CONST            000004-000007                4
                         001EFC-007253             5358
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      001EFC-007253             5358
        RAM              000097-0000FF               69
                         00017E-0007FF              100
        SFR              000F60-000FFF               A0
        SMALLCONST       001EFC-007253              100
        STACK            00017E-0007FF              682

                                  Symbol Table

?___awdiv                   cstackCOMRAM 000001
?___awmod                   cstackCOMRAM 000001
?_creer_champi              cstackCOMRAM 000001
?_strlen                    cstackCOMRAM 000001
_ADCON1                     (abs)        000FC1
_Font3x6                    mediumconst  007E55
_Font8x8                    mediumconst  007255
_INTCONbits                 (abs)        000FF2
_LATBbits                   (abs)        000F8A
_LATD                       (abs)        000F8C
_PORTA                      (abs)        000F80
_PORTB                      (abs)        000F81
_PORTC                      (abs)        000F82
_PORTCbits                  (abs)        000F82
_PORTD                      (abs)        000F83
_PORTEbits                  (abs)        000F84
_T0CON                      (abs)        000FD5
_TRISA                      (abs)        000F92
_TRISB                      (abs)        000F93
_TRISC                      (abs)        000F94
_TRISD                      (abs)        000F95
__HRAM                      (abs)        000000
__Habs1                     abs1         000000
__Hbank0                    bank0        000000
__Hbank1                    bank1        000000
__Hbank2                    bank2        000000
__Hbank3                    bank3        000000
__Hbank4                    bank4        000000
__Hbank5                    bank5        000000
__Hbank6                    bank6        000000
__Hbank7                    bank7        000000
__Hbigbss                   bigbss       000000
__Hbigdata                  bigdata      000000
__Hbigram                   bigram       000000
__Hbss                      bss          000000
__HbssBANK0                 bssBANK0     000000
__HbssCOMRAM                bssCOMRAM    000000
__Hcinit                    cinit        000000
__Hclrtext                  clrtext      000000
__Hcomram                   comram       000000
__Hconfig                   config       30000E
__Hconst                    const        000000
__HcstackCOMRAM             cstackCOMRAM 000000
__Hdata                     data         000000
__HdataBANK0                dataBANK0    000000
__HdataBANK1                dataBANK1    000000
__HdataCOMRAM               dataCOMRAM   000000
__Heeprom_data              eeprom_data  000000
__Hfarbss                   farbss       000000
__Hfardata                  fardata      000000
__Hibigdata                 ibigdata     000000
__Hidata                    idata        000000
__HidataBANK0               idataBANK0   000000
__HidataBANK1               idataBANK1   000000
__HidataCOMRAM              idataCOMRAM  000000
__Hidloc                    idloc        200008
__Hifardata                 ifardata     000000
__Hinit                     init         000012
__Hintcode                  intcode      00000E
__Hintcode_body             intcode_body 000000
__Hintcodelo                intcodelo    00000E
__Hintentry                 intentry     000000
__Hintret                   intret       000000
__Hintsave_regs             intsave_regs 000000
__Hirdata                   irdata       000000
__Hmediumconst              mediumconst  008000
__HnvFARRAM                 nvFARRAM     000000
__Hnvbit                    nvbit        000000
__Hnvrram                   nvrram       000000
__Hparam                    rparam       000000
__Hpowerup                  powerup      00000E
__Hram                      ram          000000
__Hramtop                   ramtop       000800
__Hrbit                     rbit         000000
__Hrbss                     rbss         000000
__Hrdata                    rdata        000000
__Hreset_vec                reset_vec    000004
__Hrparam                   rparam       000000
__Hsfr                      sfr          000000
__Hsmallconst               smallconst   000000
__Hspace_0                  (abs)        30000E
__Hspace_1                  (abs)        00017E
__Hspace_2                  (abs)        000000
__Hstack                    stack        000000
__Hstruct                   struct       000000
__Htemp                     temp         00005D
__Htext                     text         000000
__Htext0                    text0        000000
__Htext1                    text1        000000
__Htext10                   text10       000000
__Htext11                   text11       000000
__Htext12                   text12       000000
__Htext13                   text13       000000
__Htext14                   text14       000000
__Htext15                   text15       000000
__Htext16                   text16       000000
__Htext17                   text17       000000
__Htext18                   text18       000000
__Htext19                   text19       000000
__Htext2                    text2        000000
__Htext20                   text20       000000
__Htext21                   text21       000000
__Htext22                   text22       000000
__Htext23                   text23       000000
__Htext24                   text24       000000
__Htext25                   text25       000000
__Htext26                   text26       000000
__Htext27                   text27       000000
__Htext28                   text28       000000
__Htext29                   text29       000000
__Htext3                    text3        000000
__Htext30                   text30       000000
__Htext31                   text31       000000
__Htext32                   text32       000000
__Htext33                   text33       000000
__Htext34                   text34       000000
__Htext4                    text4        000000
__Htext5                    text5        000000
__Htext6                    text6        000000
__Htext7                    text7        000000
__Htext8                    text8        000000
__Htext9                    text9        000000
__LRAM                      (abs)        000001
__Labs1                     abs1         000000
__Lbank0                    bank0        000000
__Lbank1                    bank1        000000
__Lbank2                    bank2        000000
__Lbank3                    bank3        000000
__Lbank4                    bank4        000000
__Lbank5                    bank5        000000
__Lbank6                    bank6        000000
__Lbank7                    bank7        000000
__Lbigbss                   bigbss       000000
__Lbigdata                  bigdata      000000
__Lbigram                   bigram       000000
__Lbss                      bss          000000
__LbssBANK0                 bssBANK0     000000
__LbssCOMRAM                bssCOMRAM    000000
__Lcinit                    cinit        000000
__Lclrtext                  clrtext      000000
__Lcomram                   comram       000000
__Lconfig                   config       300000
__Lconst                    const        000000
__LcstackCOMRAM             cstackCOMRAM 000000
__Ldata                     data         000000
__LdataBANK0                dataBANK0    000000
__LdataBANK1                dataBANK1    000000
__LdataCOMRAM               dataCOMRAM   000000
__Leeprom_data              eeprom_data  000000
__Lfarbss                   farbss       000000
__Lfardata                  fardata      000000
__Libigdata                 ibigdata     000000
__Lidata                    idata        000000
__LidataBANK0               idataBANK0   000000
__LidataBANK1               idataBANK1   000000
__LidataCOMRAM              idataCOMRAM  000000
__Lidloc                    idloc        200000
__Lifardata                 ifardata     000000
__Linit                     init         00000E
__Lintcode                  intcode      000008
__Lintcode_body             intcode_body 000000
__Lintcodelo                intcodelo    00000E
__Lintentry                 intentry     000000
__Lintret                   intret       000000
__Lintsave_regs             intsave_regs 000000
__Lirdata                   irdata       000000
__Lmediumconst              mediumconst  007254
__LnvFARRAM                 nvFARRAM     000000
__Lnvbit                    nvbit        000000
__Lnvrram                   nvrram       000000
__Lparam                    rparam       000000
__Lpowerup                  powerup      00000E
__Lram                      ram          000000
__Lramtop                   ramtop       000800
__Lrbit                     rbit         000000
__Lrbss                     rbss         000000
__Lrdata                    rdata        000000
__Lreset_vec                reset_vec    000000
__Lrparam                   rparam       000000
__Lsfr                      sfr          000000
__Lsmallconst               smallconst   000000
__Lspace_0                  (abs)        000000
__Lspace_1                  (abs)        000000
__Lspace_2                  (abs)        000000
__Lstack                    stack        000000
__Lstruct                   struct       000000
__Ltemp                     temp         00005C
__Ltext                     text         000000
__Ltext0                    text0        000000
__Ltext1                    text1        000000
__Ltext10                   text10       000000
__Ltext11                   text11       000000
__Ltext12                   text12       000000
__Ltext13                   text13       000000
__Ltext14                   text14       000000
__Ltext15                   text15       000000
__Ltext16                   text16       000000
__Ltext17                   text17       000000
__Ltext18                   text18       000000
__Ltext19                   text19       000000
__Ltext2                    text2        000000
__Ltext20                   text20       000000
__Ltext21                   text21       000000
__Ltext22                   text22       000000
__Ltext23                   text23       000000
__Ltext24                   text24       000000
__Ltext25                   text25       000000
__Ltext26                   text26       000000
__Ltext27                   text27       000000
__Ltext28                   text28       000000
__Ltext29                   text29       000000
__Ltext3                    text3        000000
__Ltext30                   text30       000000
__Ltext31                   text31       000000
__Ltext32                   text32       000000
__Ltext33                   text33       000000
__Ltext34                   text34       000000
__Ltext4                    text4        000000
__Ltext5                    text5        000000
__Ltext6                    text6        000000
__Ltext7                    text7        000000
__Ltext8                    text8        000000
__Ltext9                    text9        000000
__S0                        (abs)        30000E
__S1                        (abs)        00017E
__S2                        (abs)        000000
___awdiv                    text27       00100A
___awdiv@counter            cstackCOMRAM 000005
___awdiv@dividend           cstackCOMRAM 000001
___awdiv@divisor            cstackCOMRAM 000003
___awdiv@quotient           cstackCOMRAM 000007
___awdiv@sign               cstackCOMRAM 000006
___awmod                    text26       0012AA
___awmod@counter            cstackCOMRAM 000005
___awmod@dividend           cstackCOMRAM 000001
___awmod@divisor            cstackCOMRAM 000003
___awmod@sign               cstackCOMRAM 000006
___inthi_sp                 stack        000000
___intlo_sp                 stack        000000
___param_bank               (abs)        000000
___rparam_used              (abs)        000001
___sp                       stack        000000
__accesstop                 (abs)        000060
__activetblptr              (abs)        000002
__end_of_Font3x6            mediumconst  007F18
__end_of_Font8x8            mediumconst  007A55
__end_of___awdiv            text27       0010F6
__end_of___awmod            text26       001382
__end_of__initialization    cinit        001BE8
__end_of_afficher_sequence  text17       001840
__end_of_bouger_sequence    text15       0016C0
__end_of_champi             mediumconst  007F9E
__end_of_collision          text14       000328
__end_of_creer_champi       text13       001E9E
__end_of_displayObject      text18       000A16
__end_of_effacer_sequence   text16       001780
__end_of_game_play          text4        00051C
__end_of_game_stats         text21       0006F2
__end_of_glcd_FillScreen    text32       0018F8
__end_of_glcd_Image         text33       00152E
__end_of_glcd_Init          text3        0015FC
__end_of_glcd_PlotPixel     text19       0012AA
__end_of_glcd_ReadByte      text20       001E00
__end_of_glcd_SetCursor     text31       001D68
__end_of_glcd_WriteByte     text34       001E46
__end_of_glcd_WriteChar3x6  text30       000CA2
__end_of_glcd_WriteChar8X8  text29       000DCE
__end_of_glcd_WriteString   text28       001A54
__end_of_isr                intcode_body 001E76
__end_of_itoa               text23       001458
__end_of_lancer_minijeu     text10       000B5E
__end_of_main               text0        001B72
__end_of_memset             text22       0008B0
__end_of_menu_actions       text6        0019AA
__end_of_menu_cursor        text5        00100A
__end_of_micro_calin        text9        001EF8
__end_of_micro_dormir       text8        001EF0
__end_of_micro_manger       text7        001EE8
__end_of_microgochi_init    text2        001EE0
__end_of_ou                 mediumconst  007F20
__end_of_remplir_tableau    text12       001C7A
__end_of_reverse            text24       001AE6
__end_of_saut_tamago        text11       000EF8
__end_of_screen_credits     text1        0011D0
__end_of_strlen             text25       001DBA
__end_of_test               mediumconst  007E55
__initialization            cinit        001B72
__mediumconst               mediumconst  007254
__pbssBANK0                 bssBANK0     000082
__pbssCOMRAM                bssCOMRAM    000053
__pcinit                    cinit        001B72
__pcstackCOMRAM             cstackCOMRAM 000001
__pdataBANK0                dataBANK0    000060
__pdataBANK1                dataBANK1    000100
__pdataCOMRAM               dataCOMRAM   000058
__pidataBANK0               idataBANK0   001E9E
__pidataBANK1               idataBANK1   001C7A
__pidataCOMRAM              idataCOMRAM  001EF8
__pintcode                  intcode      000008
__pintcode_body             intcode_body 001E46
__pmediumconst              mediumconst  007254
__ptext0                    text0        001AE6
__ptext1                    text1        0010F6
__ptext10                   text10       000A16
__ptext11                   text11       000DCE
__ptext12                   text12       001BF6
__ptext13                   text13       001E76
__ptext14                   text14       000012
__ptext15                   text15       0015FC
__ptext16                   text16       0016C0
__ptext17                   text17       001780
__ptext18                   text18       0008B0
__ptext19                   text19       0011D0
__ptext2                    text2        001EC0
__ptext20                   text20       001DBA
__ptext21                   text21       00051C
__ptext22                   text22       0006F2
__ptext23                   text23       001382
__ptext24                   text24       001A54
__ptext25                   text25       001D68
__ptext26                   text26       0012AA
__ptext27                   text27       00100A
__ptext28                   text28       0019AA
__ptext29                   text29       000CA2
__ptext3                    text3        00152E
__ptext30                   text30       000B5E
__ptext31                   text31       001CF8
__ptext32                   text32       001840
__ptext33                   text33       001458
__ptext34                   text34       001E00
__ptext4                    text4        000328
__ptext5                    text5        000EF8
__ptext6                    text6        0018F8
__ptext7                    text7        001EE0
__ptext8                    text8        001EE8
__ptext9                    text9        001EF0
__ramtop                    ramtop       000800
__size_of___awdiv           (abs)        000000
__size_of___awmod           (abs)        000000
__size_of_afficher_sequence (abs)        000000
__size_of_bouger_sequence   (abs)        000000
__size_of_collision         (abs)        000000
__size_of_creer_champi      (abs)        000000
__size_of_displayObject     (abs)        000000
__size_of_effacer_sequence  (abs)        000000
__size_of_game_play         (abs)        000000
__size_of_game_stats        (abs)        000000
__size_of_glcd_FillScreen   (abs)        000000
__size_of_glcd_Image        (abs)        000000
__size_of_glcd_Init         (abs)        000000
__size_of_glcd_PlotPixel    (abs)        000000
__size_of_glcd_ReadByte     (abs)        000000
__size_of_glcd_SetCursor    (abs)        000000
__size_of_glcd_WriteByte    (abs)        000000
__size_of_glcd_WriteChar3x6 (abs)        000000
__size_of_glcd_WriteChar8X8 (abs)        000000
__size_of_glcd_WriteString  (abs)        000000
__size_of_isr               (abs)        000000
__size_of_itoa              (abs)        000000
__size_of_lancer_minijeu    (abs)        000000
__size_of_main              (abs)        000000
__size_of_memset            (abs)        000000
__size_of_menu_actions      (abs)        000000
__size_of_menu_cursor       (abs)        000000
__size_of_micro_calin       (abs)        000000
__size_of_micro_dormir      (abs)        000000
__size_of_micro_manger      (abs)        000000
__size_of_microgochi_init   (abs)        000000
__size_of_remplir_tableau   (abs)        000000
__size_of_reverse           (abs)        000000
__size_of_saut_tamago       (abs)        000000
__size_of_screen_credits    (abs)        000000
__size_of_strlen            (abs)        000000
__smallconst                smallconst   000000
_afficher_sequence          text17       001780
_bouger_sequence            text15       0015FC
_buffer                     bssCOMRAM    000055
_champi                     mediumconst  007F20
_colli                      bssBANK0     000091
_collision                  text14       000012
_cpt                        bssBANK0     000095
_creer_champi               text13       001E76
_cursor                     dataBANK0    000064
_direction                  bssBANK0     000093
_displayObject              text18       0008B0
_effacer_sequence           text16       0016C0
_game_play                  text4        000328
_game_stats                 text21       00051C
_glcd_FillScreen            text32       001840
_glcd_Image                 text33       001458
_glcd_Init                  text3        00152E
_glcd_PlotPixel             text19       0011D0
_glcd_ReadByte              text20       001DBA
_glcd_SetCursor             text31       001CF8
_glcd_WriteByte             text34       001E00
_glcd_WriteChar3x6          text30       000B5E
_glcd_WriteChar8X8          text29       000CA2
_glcd_WriteString           text28       0019AA
_isr                        intcode      000008
_itoa                       text23       001382
_lancer_minijeu             text10       000A16
_mGogo                      bssBANK0     00008A
_main                       text0        001AE6
_memset                     text22       0006F2
_menu_actions               text6        0018F8
_menu_cursor                text5        000EF8
_micro_calin                text9        001EF0
_micro_dormir               text8        001EE8
_micro_manger               text7        001EE0
_microgochi_init            text2        001EC0
_ou                         mediumconst  007F18
_remplir_tableau            text12       001BF6
_reverse                    text24       001A54
_saut_tamago                text11       000DCE
_score                      dataCOMRAM   000058
_screen_credits             text1        0010F6
_strlen                     text25       001D68
_tab                        bssBANK0     000082
_taille                     dataCOMRAM   00005A
_tamago                     dataBANK1    000100
_tamago_hauteur             dataBANK0    000060
_tamago_largeur             dataBANK0    000062
_test                       mediumconst  007A55
_x                          bssCOMRAM    000054
_y                          bssCOMRAM    000053
afficher_sequence@i         cstackCOMRAM 00002D
bouger_sequence@i           cstackCOMRAM 000032
btemp                       temp         00005C
collision@i                 cstackCOMRAM 000040
collision@i_726             cstackCOMRAM 00003E
creer_champi@new_champi     cstackCOMRAM 000006
creer_champi@x              cstackCOMRAM 000005
creer_champi@y              cstackCOMRAM 000001
displayObject@height        cstackCOMRAM 000018
displayObject@i             cstackCOMRAM 000023
displayObject@j             cstackCOMRAM 000025
displayObject@nb            cstackCOMRAM 000021
displayObject@tab           cstackCOMRAM 000012
displayObject@width         cstackCOMRAM 00001A
displayObject@write         cstackCOMRAM 00001C
displayObject@x             cstackCOMRAM 000014
displayObject@y             cstackCOMRAM 000016
effacer_sequence@i          cstackCOMRAM 00002D
end_of_initialization       cinit        001BE8
game_play@action            cstackCOMRAM 000048
game_play@button_pressed    cstackCOMRAM 000046
game_play@write             cstackCOMRAM 000044
game_stats@sortie_enable    cstackCOMRAM 000018
glcd_FillScreen@color       cstackCOMRAM 00000B
glcd_FillScreen@i           cstackCOMRAM 00000D
glcd_FillScreen@j           cstackCOMRAM 00000C
glcd_Image@cs               cstackCOMRAM 00000F
glcd_Image@i                cstackCOMRAM 00000E
glcd_Image@j                cstackCOMRAM 00000D
glcd_Image@ptr              cstackCOMRAM 00000B
glcd_Init@mode              cstackCOMRAM 00000F
glcd_PlotPixel@color        cstackCOMRAM 00000C
glcd_PlotPixel@data         cstackCOMRAM 000010
glcd_PlotPixel@side         cstackCOMRAM 000011
glcd_PlotPixel@xpos         cstackCOMRAM 00000F
glcd_PlotPixel@ypos         cstackCOMRAM 00000B
glcd_ReadByte@data          cstackCOMRAM 000002
glcd_ReadByte@side          cstackCOMRAM 000001
glcd_SetCursor@side         cstackCOMRAM 00000C
glcd_SetCursor@xpos         cstackCOMRAM 00000D
glcd_SetCursor@ypos         cstackCOMRAM 00000B
glcd_WriteByte@data         cstackCOMRAM 000009
glcd_WriteByte@side         cstackCOMRAM 00000A
glcd_WriteChar3x6@ch        cstackCOMRAM 00000F
glcd_WriteChar3x6@color     cstackCOMRAM 00000B
glcd_WriteChar3x6@i         cstackCOMRAM 000010
glcd_WriteChar3x6@side      cstackCOMRAM 000011
glcd_WriteChar3x6@xpos      cstackCOMRAM 00000E
glcd_WriteChar8X8@ch        cstackCOMRAM 000010
glcd_WriteChar8X8@chr       cstackCOMRAM 00000E
glcd_WriteChar8X8@color     cstackCOMRAM 00000B
glcd_WriteChar8X8@i         cstackCOMRAM 000012
glcd_WriteChar8X8@side      cstackCOMRAM 000013
glcd_WriteChar8X8@xpos      cstackCOMRAM 000011
glcd_WriteString@color      cstackCOMRAM 000017
glcd_WriteString@font       cstackCOMRAM 000016
glcd_WriteString@str        cstackCOMRAM 000014
int$flags                   temp         00005C
int_func                    intcode_body 001E46
intlevel0                   text         000000
intlevel1                   text         000000
intlevel2                   text         000000
intlevel3                   text         000000
itoa@i                      cstackCOMRAM 000015
itoa@n                      cstackCOMRAM 00000F
itoa@s                      cstackCOMRAM 000011
itoa@sign                   cstackCOMRAM 000013
main@bool_jeu               cstackCOMRAM 000051
memset@c                    cstackCOMRAM 000003
memset@dest                 cstackCOMRAM 000001
memset@k                    cstackCOMRAM 00000B
memset@n                    cstackCOMRAM 000005
memset@s                    cstackCOMRAM 00000D
menu_actions@action         cstackCOMRAM 000042
menu_cursor@action          cstackCOMRAM 000027
menu_cursor@write           cstackCOMRAM 000029
remplir_tableau@i           cstackCOMRAM 00000C
remplir_tableau@x           cstackCOMRAM 00000E
reverse@c                   cstackCOMRAM 00000A
reverse@i                   cstackCOMRAM 00000B
reverse@j                   cstackCOMRAM 00000D
reverse@s                   cstackCOMRAM 000007
saut_tamago@i               cstackCOMRAM 000034
stackhi                     (abs)        0007FF
stacklo                     (abs)        00017E
start                       init         00000E
start_initialization        cinit        001B72
strlen@a                    cstackCOMRAM 000005
strlen@s                    cstackCOMRAM 000001
ttemp5                      temp         00005D
ttemp6                      temp         000060
ttemp7                      temp         000064
wtemp8                      temp         00005D


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 43 in file "main.c"
 Parameters:    Size  Location     Type
  argc            2   73[COMRAM] int 
  argv            3   75[COMRAM] PTR PTR unsigned char 
 Auto vars:     Size  Location     Type
  bool_jeu        2   80[COMRAM] int 
 Return value:  Size  Location     Type
                  2   73[COMRAM] int 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         5       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels required when called:   10
 This function calls:
		_game_play
		_glcd_Init
		_microgochi_init
		_screen_credits
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _screen_credits *****************
 Defined at:
		line 25 in file "screen.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_glcd_FillScreen
		_glcd_SetCursor
		_glcd_WriteString
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _microgochi_init *****************
 Defined at:
		line 14 in file "microgochi.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _glcd_Init *****************
 Defined at:
		line 341 in file "glcd.c"
 Parameters:    Size  Location     Type
  mode            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  mode            1   14[COMRAM] unsigned char 
  k               1    0        unsigned char 
  j               1    0        unsigned char 
  i               1    0        unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_glcd_FillScreen
		_glcd_WriteByte
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _game_play *****************
 Defined at:
		line 22 in file "game.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  action          2   71[COMRAM] int 
  button_press    2   69[COMRAM] int 
  write           2   67[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_glcd_FillScreen
		_glcd_Image
		_glcd_SetCursor
		_menu_actions
		_menu_cursor
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _menu_cursor *****************
 Defined at:
		line 18 in file "menu.c"
 Parameters:    Size  Location     Type
  action          2   38[COMRAM] int 
  write           2   40[COMRAM] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_displayObject
 This function is called by:
		_game_play
 This function uses a non-reentrant model


 *************** function _menu_actions *****************
 Defined at:
		line 39 in file "menu.c"
 Parameters:    Size  Location     Type
  action          2   65[COMRAM] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_game_stats
		_lancer_minijeu
		_micro_calin
		_micro_dormir
		_micro_manger
 This function is called by:
		_game_play
 This function uses a non-reentrant model


 *************** function _micro_manger *****************
 Defined at:
		line 36 in file "microgochi.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_menu_actions
 This function uses a non-reentrant model


 *************** function _micro_dormir *****************
 Defined at:
		line 46 in file "microgochi.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_menu_actions
 This function uses a non-reentrant model


 *************** function _micro_calin *****************
 Defined at:
		line 41 in file "microgochi.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_menu_actions
 This function uses a non-reentrant model


 *************** function _lancer_minijeu *****************
 Defined at:
		line 197 in file "minijeu.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_bouger_sequence
		_collision
		_displayObject
		_glcd_FillScreen
		_glcd_SetCursor
		_glcd_WriteString
		_itoa
		_memset
		_remplir_tableau
		_saut_tamago
 This function is called by:
		_menu_actions
 This function uses a non-reentrant model


 *************** function _saut_tamago *****************
 Defined at:
		line 94 in file "minijeu.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2   51[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_bouger_sequence
		_displayObject
 This function is called by:
		_lancer_minijeu
 This function uses a non-reentrant model


 *************** function _remplir_tableau *****************
 Defined at:
		line 46 in file "minijeu.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2   11[COMRAM] int 
  x               1   13[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_creer_champi
 This function is called by:
		_lancer_minijeu
 This function uses a non-reentrant model


 *************** function _creer_champi *****************
 Defined at:
		line 36 in file "minijeu.c"
 Parameters:    Size  Location     Type
  x               1    wreg     unsigned char 
  y               1    0[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  x               1    4[COMRAM] unsigned char 
  new_champi      4    5[COMRAM] struct champi
 Return value:  Size  Location     Type
                  4    0[COMRAM] struct champi
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         5       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_remplir_tableau
 This function uses a non-reentrant model


 *************** function _collision *****************
 Defined at:
		line 123 in file "minijeu.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2   61[COMRAM] int 
  i               2   63[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:         10       0       0       0       0       0       0       0       0
      Totals:        14       0       0       0       0       0       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_bouger_sequence
		_displayObject
 This function is called by:
		_lancer_minijeu
 This function uses a non-reentrant model


 *************** function _bouger_sequence *****************
 Defined at:
		line 78 in file "minijeu.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2   49[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_afficher_sequence
		_effacer_sequence
 This function is called by:
		_saut_tamago
		_collision
		_lancer_minijeu
 This function uses a non-reentrant model


 *************** function _effacer_sequence *****************
 Defined at:
		line 67 in file "minijeu.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2   44[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          6       0       0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_displayObject
 This function is called by:
		_bouger_sequence
 This function uses a non-reentrant model


 *************** function _afficher_sequence *****************
 Defined at:
		line 56 in file "minijeu.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2   44[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          6       0       0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_displayObject
 This function is called by:
		_bouger_sequence
 This function uses a non-reentrant model


 *************** function _displayObject *****************
 Defined at:
		line 13 in file "myglcd.c"
 Parameters:    Size  Location     Type
  tab             2   17[COMRAM] PTR unsigned char 
		 -> tamago(126), champi(126), cursor(30), 
  x               2   19[COMRAM] int 
  y               2   21[COMRAM] int 
  height          2   23[COMRAM] int 
  width           2   25[COMRAM] int 
  write           2   27[COMRAM] int 
 Auto vars:     Size  Location     Type
  j               2   36[COMRAM] int 
  i               2   34[COMRAM] int 
  nb              2   32[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:        12       0       0       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0       0       0
      Totals:        21       0       0       0       0       0       0       0       0
Total ram usage:       21 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_glcd_PlotPixel
 This function is called by:
		_menu_cursor
		_afficher_sequence
		_effacer_sequence
		_saut_tamago
		_collision
		_lancer_minijeu
 This function uses a non-reentrant model


 *************** function _glcd_PlotPixel *****************
 Defined at:
		line 468 in file "glcd.c"
 Parameters:    Size  Location     Type
  xpos            1    wreg     unsigned char 
  ypos            1   10[COMRAM] unsigned char 
  color           1   11[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  xpos            1   14[COMRAM] unsigned char 
  side            1   16[COMRAM] unsigned char 
  data            1   15[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___awdiv
		_glcd_ReadByte
		_glcd_WriteByte
 This function is called by:
		_displayObject
		_glcd_Rect
 This function uses a non-reentrant model


 *************** function _glcd_ReadByte *****************
 Defined at:
		line 431 in file "glcd.c"
 Parameters:    Size  Location     Type
  side            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  side            1    0[COMRAM] unsigned char 
  data            1    1[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_glcd_PlotPixel
 This function uses a non-reentrant model


 *************** function _game_stats *****************
 Defined at:
		line 93 in file "game.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  sortie_enabl    2   23[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_glcd_FillScreen
		_glcd_SetCursor
		_glcd_WriteString
		_itoa
		_memset
 This function is called by:
		_menu_actions
 This function uses a non-reentrant model


 *************** function _memset *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c"
 Parameters:    Size  Location     Type
  dest            2    0[COMRAM] PTR void 
		 -> buffer(3), 
  c               2    2[COMRAM] int 
  n               2    4[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  s               2   12[COMRAM] PTR unsigned char 
		 -> buffer(3), 
  k               2   10[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  2    0[COMRAM] PTR void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         6       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0       0       0
      Totals:        14       0       0       0       0       0       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_game_stats
		_lancer_minijeu
 This function uses a non-reentrant model


 *************** function _itoa *****************
 Defined at:
		line 14 in file "itoa.c"
 Parameters:    Size  Location     Type
  n               2   14[COMRAM] int 
  s               2   16[COMRAM] PTR unsigned char 
		 -> buffer(3), 
 Auto vars:     Size  Location     Type
  i               2   20[COMRAM] int 
  sign            2   18[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___awdiv
		___awmod
		_reverse
 This function is called by:
		_game_stats
		_lancer_minijeu
 This function uses a non-reentrant model


 *************** function _reverse *****************
 Defined at:
		line 31 in file "itoa.c"
 Parameters:    Size  Location     Type
  s               2    6[COMRAM] PTR unsigned char 
		 -> buffer(3), 
 Auto vars:     Size  Location     Type
  j               2   12[COMRAM] int 
  i               2   10[COMRAM] int 
  c               1    9[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         5       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_strlen
 This function is called by:
		_itoa
 This function uses a non-reentrant model


 *************** function _strlen *****************
 Defined at:
		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
 Parameters:    Size  Location     Type
  s               2    0[COMRAM] PTR const unsigned char 
		 -> buffer(3), 
 Auto vars:     Size  Location     Type
  a               2    4[COMRAM] PTR const unsigned char 
		 -> buffer(3), 
 Return value:  Size  Location     Type
                  2    0[COMRAM] unsigned int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_reverse
 This function uses a non-reentrant model


 *************** function ___awmod *****************
 Defined at:
		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
 Parameters:    Size  Location     Type
  dividend        2    0[COMRAM] int 
  divisor         2    2[COMRAM] int 
 Auto vars:     Size  Location     Type
  sign            1    5[COMRAM] unsigned char 
  counter         1    4[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2    0[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_itoa
 This function uses a non-reentrant model


 *************** function ___awdiv *****************
 Defined at:
		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
 Parameters:    Size  Location     Type
  dividend        2    0[COMRAM] int 
  divisor         2    2[COMRAM] int 
 Auto vars:     Size  Location     Type
  quotient        2    6[COMRAM] int 
  sign            1    5[COMRAM] unsigned char 
  counter         1    4[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2    0[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_glcd_PlotPixel
		_itoa
 This function uses a non-reentrant model


 *************** function _glcd_WriteString *****************
 Defined at:
		line 670 in file "glcd.c"
 Parameters:    Size  Location     Type
  str             2   19[COMRAM] PTR const unsigned char 
		 -> STR_15(5), STR_14(7), STR_13(5), STR_12(4), 
		 -> STR_11(6), STR_10(5), STR_9(7), STR_8(6), 
		 -> STR_7(6), STR_6(7), STR_5(7), STR_4(9), 
		 -> buffer(3), STR_3(6), STR_2(9), STR_1(7), 
  font            1   21[COMRAM] unsigned char 
  color           1   22[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_glcd_WriteChar3x6
		_glcd_WriteChar8X8
 This function is called by:
		_game_stats
		_screen_credits
		_lancer_minijeu
		_glcd_text_write
 This function uses a non-reentrant model


 *************** function _glcd_WriteChar8X8 *****************
 Defined at:
		line 576 in file "glcd.c"
 Parameters:    Size  Location     Type
  ch              1    wreg     unsigned char 
  color           1   10[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  ch              1   15[COMRAM] unsigned char 
  chr             2   13[COMRAM] unsigned int 
  side            1   18[COMRAM] unsigned char 
  i               1   17[COMRAM] unsigned char 
  xpos            1   16[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         1       0       0       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_glcd_WriteByte
 This function is called by:
		_glcd_WriteString
 This function uses a non-reentrant model


 *************** function _glcd_WriteChar3x6 *****************
 Defined at:
		line 624 in file "glcd.c"
 Parameters:    Size  Location     Type
  ch              1    wreg     unsigned char 
  color           1   10[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  ch              1   14[COMRAM] unsigned char 
  side            1   16[COMRAM] unsigned char 
  i               1   15[COMRAM] unsigned char 
  xpos            1   13[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         1       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_glcd_WriteByte
 This function is called by:
		_glcd_WriteString
 This function uses a non-reentrant model


 *************** function _glcd_SetCursor *****************
 Defined at:
		line 551 in file "glcd.c"
 Parameters:    Size  Location     Type
  xpos            1    wreg     unsigned char 
  ypos            1   10[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  xpos            1   12[COMRAM] unsigned char 
  side            1   11[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         1       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_glcd_WriteByte
 This function is called by:
		_game_play
		_game_stats
		_screen_credits
		_lancer_minijeu
		_glcd_text_write
 This function uses a non-reentrant model


 *************** function _glcd_FillScreen *****************
 Defined at:
		line 527 in file "glcd.c"
 Parameters:    Size  Location     Type
  color           1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  color           1   10[COMRAM] unsigned char 
  i               1   12[COMRAM] unsigned char 
  j               1   11[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_glcd_WriteByte
 This function is called by:
		_game_play
		_game_stats
		_screen_credits
		_glcd_Init
		_lancer_minijeu
 This function uses a non-reentrant model


 *************** function _glcd_Image *****************
 Defined at:
		line 697 in file "glcd.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  ptr             2   10[COMRAM] int 
  cs              1   14[COMRAM] unsigned char 
  i               1   13[COMRAM] unsigned char 
  j               1   12[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         5       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_glcd_WriteByte
 This function is called by:
		_game_play
 This function uses a non-reentrant model


 *************** function _glcd_WriteByte *****************
 Defined at:
		line 395 in file "glcd.c"
 Parameters:    Size  Location     Type
  side            1    wreg     unsigned char 
  data            1    8[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  side            1    9[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         1       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_glcd_Init
		_glcd_PlotPixel
		_glcd_FillScreen
		_glcd_SetCursor
		_glcd_WriteChar8X8
		_glcd_WriteChar3x6
		_glcd_Image
		_glcd_icon8X8
 This function uses a non-reentrant model


 *************** function _isr *****************
 Defined at:
		line 30 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 2
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
minijeu.c
		_creer_champi  		CODE           	1E76	0000	41
		_afficher_sequence		CODE           	1780	0000	193
		_collision     		CODE           	0012	0000	791
		_effacer_sequence		CODE           	16C0	0000	193
		_saut_tamago   		CODE           	0DCE	0000	299
		_remplir_tableau		CODE           	1BF6	0000	133
		_lancer_minijeu		CODE           	0A16	0000	329
		_bouger_sequence		CODE           	15FC	0000	197

minijeu.c estimated size: 2176

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c
		___awmod       		CODE           	12AA	0000	217

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c estimated size: 217

microgochi.c
		_microgochi_init		CODE           	1EC0	0000	33
		_micro_dormir  		CODE           	1EE8	0000	9
		_micro_manger  		CODE           	1EE0	0000	9
		_micro_calin   		CODE           	1EF0	0000	9

microgochi.c estimated size: 60

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c
		_strlen        		CODE           	1D68	0000	83

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c estimated size: 83

screen.c
		_screen_credits		CODE           	10F6	0000	219

screen.c estimated size: 219

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c
		_memset        		CODE           	06F2	0000	447

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c estimated size: 447

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c
		___awdiv       		CODE           	100A	0000	237

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c estimated size: 237

shared
		_Font3x6       		MEDIUMCONST    	7E55	0000	196
		_champi        		MEDIUMCONST    	7F20	0000	127
		_Font8x8       		MEDIUMCONST    	7255	0000	2049
		_test          		MEDIUMCONST    	7A55	0000	1025
		__initialization		CODE           	1B72	0000	119
		_ou            		MEDIUMCONST    	7F18	0000	9

shared estimated size: 3525

game.c
		_game_stats    		CODE           	051C	0000	471
		_game_play     		CODE           	0328	0000	501

game.c estimated size: 972

glcd.c
		_glcd_SetCursor		CODE           	1CF8	0000	113
		_glcd_WriteString		CODE           	19AA	0000	171
		_glcd_WriteByte		CODE           	1E00	0000	71
		_glcd_Init     		CODE           	152E	0000	207
		_glcd_ReadByte 		CODE           	1DBA	0000	71
		_glcd_WriteChar8X8		CODE           	0CA2	0000	301
		_glcd_FillScreen		CODE           	1840	0000	185
		_glcd_WriteChar3x6		CODE           	0B5E	0000	325
		_glcd_PlotPixel		CODE           	11D0	0000	219
		_glcd_Image    		CODE           	1458	0000	215

glcd.c estimated size: 1878

myglcd.c
		_displayObject 		CODE           	08B0	0000	359

myglcd.c estimated size: 359

menu.c
		_menu_actions  		CODE           	18F8	0000	179
		_menu_cursor   		CODE           	0EF8	0000	275

menu.c estimated size: 454

itoa.c
		_itoa          		CODE           	1382	0000	215
		_reverse       		CODE           	1A54	0000	147

itoa.c estimated size: 362

main.c
		_main          		CODE           	1AE6	0000	141
		_isr           		CODE           	0008	0000	55

main.c estimated size: 196

