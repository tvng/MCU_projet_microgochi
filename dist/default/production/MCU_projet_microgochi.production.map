Microchip MPLAB XC8 Compiler V2.00 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v2.00\pic\dat\en_msgs.txt \
  -cs -h+dist/default/production\MCU_projet_microgochi.production.sym \
  --cmf=dist/default/production\MCU_projet_microgochi.production.cmf -z \
  -Q18F4550 -oC:\Users\X250\AppData\Local\Temp\scso.2 \
  --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/MCU_projet_microgochi.production.map -E1 \
  -ver=XC8 --acfsm=1493 -ASTACK=07Eh-07ffh -pstack=STACK -ACODE=00h-07FFFh \
  -ACONST=00h-07FFFh -ASMALLCONST=0800h-08FFhx120 \
  -AMEDIUMCONST=0800h-07FFFh -ACOMRAM=01h-05Fh -AABS1=00h-07FFh \
  -ABIGRAM=01h-07FFh -ARAM=060h-0FFh,0100h-01FFhx7 -ABANK0=060h-0FFh \
  -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh -ABANK3=0300h-03FFh \
  -ABANK4=0400h-04FFh -ABANK5=0500h-05FFh -ABANK6=0600h-06FFh \
  -ABANK7=0700h-07FFh -ASFR=0F60h-0FFFh \
  -preset_vec=00h,intcode=08h,intcodelo,powerup,init -pramtop=0800h \
  -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST -pconst=CONST \
  -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\X250\AppData\Local\Temp\scso.o \
  dist/default/production\MCU_projet_microgochi.production.o 

Object code version is 3.11

Machine type is 18F4550

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\X250\AppData\Local\Temp\scso.o
                init                                  E        E        4        4       0
                reset_vec                             0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production\MCU_projet_microgochi.production.o
                intcode                               8        8        6        4       0
                temp                                 55       55        1        1       1
                mediumconst                        71E8     71E8      E18     38F4       0
                intcode_body                       17F2     17F2       2E        4       0
                text32                             17AC     17AC       46        4       0
                text31                              ECE      ECE       D6        4       0
                text30                             1072     1072       B8        4       0
                text29                             1594     1594       70        4       0
                text28                              6FE      6FE      144        4       0
                text27                              842      842      12C        4       0
                text26                             1334     1334       AA        4       0
                text25                              A80      A80       EC        4       0
                text24                              D20      D20       D8        4       0
                text23                             16C4     16C4       52        4       0
                text22                             1478     1478       92        4       0
                text21                              DF8      DF8       D6        4       0
                text20                              3DA      3DA      1BE        4       0
                text19                              204      204      1D6        4       0
                text18                             1766     1766       46        4       0
                text17                              C46      C46       DA        4       0
                text16                              598      598      166        4       0
                text15                             1288     1288       AC        4       0
                text14                             11DC     11DC       AC        4       0
                text13                             13DE     13DE       9A        4       0
                text12                             183E     183E       18        4       0
                text11                             1604     1604       6E        4       0
                text10                             1716     1716       50        4       0
                text9                              1878     1878        6        4       0
                text8                              1872     1872        6        4       0
                text7                              186C     186C        6        4       0
                text6                              112A     112A       B2        4       0
                text5                               96E      96E      112        4       0
                text4                                12       12      1F2        4       0
                text3                               FA4      FA4       CE        4       0
                text2                              1856     1856       16        4       0
                text1                               B6C      B6C       DA        4       0
                text0                              150A     150A       8A        4       0
                cstackCOMRAM                          1        1       40        1       1
                dataBANK0                            60       60       1E       60       1
                dataCOMRAM                           53       53        2        1       1
                bssCOMRAM                            41       41       12        1       1
                cinit                              1672     1672       52        4       0
                idataBANK0                         1820     1820       1E        4       0
                idataCOMRAM                        187E     187E        2        4       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                intcode                               8        8        6         0
                init                                  E        E        4         0
                reset_vec                             0        0        4         0
                intcode_body                       17F2     17F2       2E         0
                text32                             17AC     17AC       46         0
                text31                              ECE      ECE       D6         0
                text30                             1072     1072       B8         0
                text29                             1594     1594       70         0
                text28                              6FE      6FE      144         0
                text27                              842      842      12C         0
                text26                             1334     1334       AA         0
                text25                              A80      A80       EC         0
                text24                              D20      D20       D8         0
                text23                             16C4     16C4       52         0
                text22                             1478     1478       92         0
                text21                              DF8      DF8       D6         0
                text20                              3DA      3DA      1BE         0
                text19                              204      204      1D6         0
                text18                             1766     1766       46         0
                text17                              C46      C46       DA         0
                text16                              598      598      166         0
                text15                             1288     1288       AC         0
                text14                             11DC     11DC       AC         0
                text13                             13DE     13DE       9A         0
                text12                             183E     183E       18         0
                text11                             1604     1604       6E         0
                text10                             1716     1716       50         0
                text9                              1878     1878        6         0
                text8                              1872     1872        6         0
                text7                              186C     186C        6         0
                text6                              112A     112A       B2         0
                text5                               96E      96E      112         0
                text4                                12       12      1F2         0
                text3                               FA4      FA4       CE         0
                text2                              1856     1856       16         0
                text1                               B6C      B6C       DA         0
                text0                              150A     150A       8A         0
                cinit                              1672     1672       52         0
                idataBANK0                         1820     1820       1E         0
                idataCOMRAM                        187E     187E        2         0

        CLASS   CONST          

        CLASS   SMALLCONST     

        CLASS   MEDIUMCONST    
                mediumconst                        71E8     71E8      E18         0

        CLASS   COMRAM         
                temp                                 55       55        1         1
                cstackCOMRAM                          1        1       40         1
                dataCOMRAM                           53       53        2         1
                bssCOMRAM                            41       41       12         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          
                dataBANK0                            60       60       1E         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   BANK4          

        CLASS   BANK5          

        CLASS   BANK6          

        CLASS   BANK7          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  000055  000056         1       1  COMRAM  
                intcode                        000008  001878  001880         4       0  CODE    
                dataBANK0                      000060  00001E  00007E        60       1  BANK0   
                mediumconst                    0071E8  000E18  008000      38F4       0  MEDIUMCO
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            00007E-0000FF               82
        BANK1            000100-0001FF              100
        BANK2            000200-0002FF              100
        BANK3            000300-0003FF              100
        BANK4            000400-0004FF              100
        BANK5            000500-0005FF              100
        BANK6            000600-0006FF              100
        BANK7            000700-0007FF              100
        BIGRAM           000056-00005F                A
                         00007E-0007FF              782
        CODE             000004-000007                4
                         001880-0071E7             5968
        COMRAM           000056-00005F                A
        CONST            000004-000007                4
                         001880-0071E7             5968
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      001880-0071E7             5968
        RAM              00007E-0007FF              100
        SFR              000F60-000FFF               A0
        SMALLCONST       001880-0071E7              100
        STACK            00007E-0007FF              782

                                  Symbol Table

?___awdiv                   cstackCOMRAM 000001
?___awmod                   cstackCOMRAM 000001
?_creer_champi              cstackCOMRAM 000001
?_strlen                    cstackCOMRAM 000001
_ADCON1                     (abs)        000FC1
_Font3x6                    mediumconst  007DE9
_Font8x8                    mediumconst  0071E9
_INTCONbits                 (abs)        000FF2
_LATBbits                   (abs)        000F8A
_LATD                       (abs)        000F8C
_PORTA                      (abs)        000F80
_PORTB                      (abs)        000F81
_PORTC                      (abs)        000F82
_PORTCbits                  (abs)        000F82
_PORTD                      (abs)        000F83
_PORTEbits                  (abs)        000F84
_T0CON                      (abs)        000FD5
_TRISA                      (abs)        000F92
_TRISB                      (abs)        000F93
_TRISC                      (abs)        000F94
_TRISD                      (abs)        000F95
__HRAM                      (abs)        000000
__Habs1                     abs1         000000
__Hbank0                    bank0        000000
__Hbank1                    bank1        000000
__Hbank2                    bank2        000000
__Hbank3                    bank3        000000
__Hbank4                    bank4        000000
__Hbank5                    bank5        000000
__Hbank6                    bank6        000000
__Hbank7                    bank7        000000
__Hbigbss                   bigbss       000000
__Hbigdata                  bigdata      000000
__Hbigram                   bigram       000000
__Hbss                      bss          000000
__HbssCOMRAM                bssCOMRAM    000000
__Hcinit                    cinit        000000
__Hclrtext                  clrtext      000000
__Hcomram                   comram       000000
__Hconfig                   config       30000E
__Hconst                    const        000000
__HcstackCOMRAM             cstackCOMRAM 000000
__Hdata                     data         000000
__HdataBANK0                dataBANK0    000000
__HdataCOMRAM               dataCOMRAM   000000
__Heeprom_data              eeprom_data  000000
__Hfarbss                   farbss       000000
__Hfardata                  fardata      000000
__Hibigdata                 ibigdata     000000
__Hidata                    idata        000000
__HidataBANK0               idataBANK0   000000
__HidataCOMRAM              idataCOMRAM  000000
__Hidloc                    idloc        200008
__Hifardata                 ifardata     000000
__Hinit                     init         000012
__Hintcode                  intcode      00000E
__Hintcode_body             intcode_body 000000
__Hintcodelo                intcodelo    00000E
__Hintentry                 intentry     000000
__Hintret                   intret       000000
__Hintsave_regs             intsave_regs 000000
__Hirdata                   irdata       000000
__Hmediumconst              mediumconst  008000
__HnvFARRAM                 nvFARRAM     000000
__Hnvbit                    nvbit        000000
__Hnvrram                   nvrram       000000
__Hparam                    rparam       000000
__Hpowerup                  powerup      00000E
__Hram                      ram          000000
__Hramtop                   ramtop       000800
__Hrbit                     rbit         000000
__Hrbss                     rbss         000000
__Hrdata                    rdata        000000
__Hreset_vec                reset_vec    000004
__Hrparam                   rparam       000000
__Hsfr                      sfr          000000
__Hsmallconst               smallconst   000000
__Hspace_0                  (abs)        30000E
__Hspace_1                  (abs)        00007E
__Hspace_2                  (abs)        000000
__Hstack                    stack        000000
__Hstruct                   struct       000000
__Htemp                     temp         000056
__Htext                     text         000000
__Htext0                    text0        000000
__Htext1                    text1        000000
__Htext10                   text10       000000
__Htext11                   text11       000000
__Htext12                   text12       000000
__Htext13                   text13       000000
__Htext14                   text14       000000
__Htext15                   text15       000000
__Htext16                   text16       000000
__Htext17                   text17       000000
__Htext18                   text18       000000
__Htext19                   text19       000000
__Htext2                    text2        000000
__Htext20                   text20       000000
__Htext21                   text21       000000
__Htext22                   text22       000000
__Htext23                   text23       000000
__Htext24                   text24       000000
__Htext25                   text25       000000
__Htext26                   text26       000000
__Htext27                   text27       000000
__Htext28                   text28       000000
__Htext29                   text29       000000
__Htext3                    text3        000000
__Htext30                   text30       000000
__Htext31                   text31       000000
__Htext32                   text32       000000
__Htext4                    text4        000000
__Htext5                    text5        000000
__Htext6                    text6        000000
__Htext7                    text7        000000
__Htext8                    text8        000000
__Htext9                    text9        000000
__LRAM                      (abs)        000001
__Labs1                     abs1         000000
__Lbank0                    bank0        000000
__Lbank1                    bank1        000000
__Lbank2                    bank2        000000
__Lbank3                    bank3        000000
__Lbank4                    bank4        000000
__Lbank5                    bank5        000000
__Lbank6                    bank6        000000
__Lbank7                    bank7        000000
__Lbigbss                   bigbss       000000
__Lbigdata                  bigdata      000000
__Lbigram                   bigram       000000
__Lbss                      bss          000000
__LbssCOMRAM                bssCOMRAM    000000
__Lcinit                    cinit        000000
__Lclrtext                  clrtext      000000
__Lcomram                   comram       000000
__Lconfig                   config       300000
__Lconst                    const        000000
__LcstackCOMRAM             cstackCOMRAM 000000
__Ldata                     data         000000
__LdataBANK0                dataBANK0    000000
__LdataCOMRAM               dataCOMRAM   000000
__Leeprom_data              eeprom_data  000000
__Lfarbss                   farbss       000000
__Lfardata                  fardata      000000
__Libigdata                 ibigdata     000000
__Lidata                    idata        000000
__LidataBANK0               idataBANK0   000000
__LidataCOMRAM              idataCOMRAM  000000
__Lidloc                    idloc        200000
__Lifardata                 ifardata     000000
__Linit                     init         00000E
__Lintcode                  intcode      000008
__Lintcode_body             intcode_body 000000
__Lintcodelo                intcodelo    00000E
__Lintentry                 intentry     000000
__Lintret                   intret       000000
__Lintsave_regs             intsave_regs 000000
__Lirdata                   irdata       000000
__Lmediumconst              mediumconst  0071E8
__LnvFARRAM                 nvFARRAM     000000
__Lnvbit                    nvbit        000000
__Lnvrram                   nvrram       000000
__Lparam                    rparam       000000
__Lpowerup                  powerup      00000E
__Lram                      ram          000000
__Lramtop                   ramtop       000800
__Lrbit                     rbit         000000
__Lrbss                     rbss         000000
__Lrdata                    rdata        000000
__Lreset_vec                reset_vec    000000
__Lrparam                   rparam       000000
__Lsfr                      sfr          000000
__Lsmallconst               smallconst   000000
__Lspace_0                  (abs)        000000
__Lspace_1                  (abs)        000000
__Lspace_2                  (abs)        000000
__Lstack                    stack        000000
__Lstruct                   struct       000000
__Ltemp                     temp         000055
__Ltext                     text         000000
__Ltext0                    text0        000000
__Ltext1                    text1        000000
__Ltext10                   text10       000000
__Ltext11                   text11       000000
__Ltext12                   text12       000000
__Ltext13                   text13       000000
__Ltext14                   text14       000000
__Ltext15                   text15       000000
__Ltext16                   text16       000000
__Ltext17                   text17       000000
__Ltext18                   text18       000000
__Ltext19                   text19       000000
__Ltext2                    text2        000000
__Ltext20                   text20       000000
__Ltext21                   text21       000000
__Ltext22                   text22       000000
__Ltext23                   text23       000000
__Ltext24                   text24       000000
__Ltext25                   text25       000000
__Ltext26                   text26       000000
__Ltext27                   text27       000000
__Ltext28                   text28       000000
__Ltext29                   text29       000000
__Ltext3                    text3        000000
__Ltext30                   text30       000000
__Ltext31                   text31       000000
__Ltext32                   text32       000000
__Ltext4                    text4        000000
__Ltext5                    text5        000000
__Ltext6                    text6        000000
__Ltext7                    text7        000000
__Ltext8                    text8        000000
__Ltext9                    text9        000000
__S0                        (abs)        30000E
__S1                        (abs)        00007E
__S2                        (abs)        000000
___awdiv                    text25       000A80
___awdiv@counter            cstackCOMRAM 000005
___awdiv@dividend           cstackCOMRAM 000001
___awdiv@divisor            cstackCOMRAM 000003
___awdiv@quotient           cstackCOMRAM 000007
___awdiv@sign               cstackCOMRAM 000006
___awmod                    text24       000D20
___awmod@counter            cstackCOMRAM 000005
___awmod@dividend           cstackCOMRAM 000001
___awmod@divisor            cstackCOMRAM 000003
___awmod@sign               cstackCOMRAM 000006
___inthi_sp                 stack        000000
___intlo_sp                 stack        000000
___param_bank               (abs)        000000
___rparam_used              (abs)        000001
___sp                       stack        000000
__accesstop                 (abs)        000060
__activetblptr              (abs)        000002
__end_of_Font3x6            mediumconst  007EAC
__end_of_Font8x8            mediumconst  0079E9
__end_of___awdiv            text25       000B6C
__end_of___awmod            text24       000DF8
__end_of__initialization    cinit        0016B6
__end_of_afficher_sequence  text15       001334
__end_of_bouger_sequence    text13       001478
__end_of_champi             mediumconst  007FB0
__end_of_creer_champi       text12       001856
__end_of_displayObject      text16       0006FE
__end_of_effacer_sequence   text14       001288
__end_of_game_play          text4        000204
__end_of_game_stats         text19       0003DA
__end_of_glcd_FillScreen    text30       00112A
__end_of_glcd_Image         text31       000FA4
__end_of_glcd_Init          text3        001072
__end_of_glcd_PlotPixel     text17       000D20
__end_of_glcd_ReadByte      text18       0017AC
__end_of_glcd_SetCursor     text29       001604
__end_of_glcd_WriteByte     text32       0017F2
__end_of_glcd_WriteChar3x6  text28       000842
__end_of_glcd_WriteChar8X8  text27       00096E
__end_of_glcd_WriteString   text26       0013DE
__end_of_isr                intcode_body 001820
__end_of_itoa               text21       000ECE
__end_of_lancer_minijeu     text10       001766
__end_of_main               text0        001594
__end_of_memset             text20       000598
__end_of_menu_actions       text6        0011DC
__end_of_menu_cursor        text5        000A80
__end_of_micro_calin        text9        00187E
__end_of_micro_dormir       text8        001878
__end_of_micro_manger       text7        001872
__end_of_microgochi_init    text2        00186C
__end_of_ou                 mediumconst  007EB4
__end_of_remplir_tableau    text11       001672
__end_of_reverse            text22       00150A
__end_of_screen_credits     text1        000C46
__end_of_strlen             text23       001716
__end_of_tamago             mediumconst  007F32
__end_of_test               mediumconst  007DE9
__initialization            cinit        001672
__mediumconst               mediumconst  0071E8
__pbssCOMRAM                bssCOMRAM    000041
__pcinit                    cinit        001672
__pcstackCOMRAM             cstackCOMRAM 000001
__pdataBANK0                dataBANK0    000060
__pdataCOMRAM               dataCOMRAM   000053
__pidataBANK0               idataBANK0   001820
__pidataCOMRAM              idataCOMRAM  00187E
__pintcode                  intcode      000008
__pintcode_body             intcode_body 0017F2
__pmediumconst              mediumconst  0071E8
__ptext0                    text0        00150A
__ptext1                    text1        000B6C
__ptext10                   text10       001716
__ptext11                   text11       001604
__ptext12                   text12       00183E
__ptext13                   text13       0013DE
__ptext14                   text14       0011DC
__ptext15                   text15       001288
__ptext16                   text16       000598
__ptext17                   text17       000C46
__ptext18                   text18       001766
__ptext19                   text19       000204
__ptext2                    text2        001856
__ptext20                   text20       0003DA
__ptext21                   text21       000DF8
__ptext22                   text22       001478
__ptext23                   text23       0016C4
__ptext24                   text24       000D20
__ptext25                   text25       000A80
__ptext26                   text26       001334
__ptext27                   text27       000842
__ptext28                   text28       0006FE
__ptext29                   text29       001594
__ptext3                    text3        000FA4
__ptext30                   text30       001072
__ptext31                   text31       000ECE
__ptext32                   text32       0017AC
__ptext4                    text4        000012
__ptext5                    text5        00096E
__ptext6                    text6        00112A
__ptext7                    text7        00186C
__ptext8                    text8        001872
__ptext9                    text9        001878
__ramtop                    ramtop       000800
__size_of___awdiv           (abs)        000000
__size_of___awmod           (abs)        000000
__size_of_afficher_sequence (abs)        000000
__size_of_bouger_sequence   (abs)        000000
__size_of_creer_champi      (abs)        000000
__size_of_displayObject     (abs)        000000
__size_of_effacer_sequence  (abs)        000000
__size_of_game_play         (abs)        000000
__size_of_game_stats        (abs)        000000
__size_of_glcd_FillScreen   (abs)        000000
__size_of_glcd_Image        (abs)        000000
__size_of_glcd_Init         (abs)        000000
__size_of_glcd_PlotPixel    (abs)        000000
__size_of_glcd_ReadByte     (abs)        000000
__size_of_glcd_SetCursor    (abs)        000000
__size_of_glcd_WriteByte    (abs)        000000
__size_of_glcd_WriteChar3x6 (abs)        000000
__size_of_glcd_WriteChar8X8 (abs)        000000
__size_of_glcd_WriteString  (abs)        000000
__size_of_isr               (abs)        000000
__size_of_itoa              (abs)        000000
__size_of_lancer_minijeu    (abs)        000000
__size_of_main              (abs)        000000
__size_of_memset            (abs)        000000
__size_of_menu_actions      (abs)        000000
__size_of_menu_cursor       (abs)        000000
__size_of_micro_calin       (abs)        000000
__size_of_micro_dormir      (abs)        000000
__size_of_micro_manger      (abs)        000000
__size_of_microgochi_init   (abs)        000000
__size_of_remplir_tableau   (abs)        000000
__size_of_reverse           (abs)        000000
__size_of_screen_credits    (abs)        000000
__size_of_strlen            (abs)        000000
__smallconst                smallconst   000000
_afficher_sequence          text15       001288
_bouger_sequence            text13       0013DE
_buffer                     bssCOMRAM    000050
_champi                     mediumconst  007F32
_cpt                        bssCOMRAM    00004C
_creer_champi               text12       00183E
_cursor                     dataBANK0    000060
_direction                  bssCOMRAM    00004A
_displayObject              text16       000598
_effacer_sequence           text14       0011DC
_game_play                  text4        000012
_game_stats                 text19       000204
_glcd_FillScreen            text30       001072
_glcd_Image                 text31       000ECE
_glcd_Init                  text3        000FA4
_glcd_PlotPixel             text17       000C46
_glcd_ReadByte              text18       001766
_glcd_SetCursor             text29       001594
_glcd_WriteByte             text32       0017AC
_glcd_WriteChar3x6          text28       0006FE
_glcd_WriteChar8X8          text27       000842
_glcd_WriteString           text26       001334
_isr                        intcode      000008
_itoa                       text21       000DF8
_lancer_minijeu             text10       001716
_mGogo                      bssCOMRAM    000041
_main                       text0        00150A
_memset                     text20       0003DA
_menu_actions               text6        00112A
_menu_cursor                text5        00096E
_micro_calin                text9        001878
_micro_dormir               text8        001872
_micro_manger               text7        00186C
_microgochi_init            text2        001856
_ou                         mediumconst  007EAC
_remplir_tableau            text11       001604
_reverse                    text22       001478
_screen_credits             text1        000B6C
_strlen                     text23       0016C4
_tab                        bssCOMRAM    000046
_taille                     dataCOMRAM   000053
_tamago                     mediumconst  007EB4
_test                       mediumconst  0079E9
_x                          bssCOMRAM    00004F
_y                          bssCOMRAM    00004E
afficher_sequence@i         cstackCOMRAM 00002B
bouger_sequence@i           cstackCOMRAM 00002E
btemp                       temp         000055
creer_champi@new_champi     cstackCOMRAM 000004
creer_champi@x              cstackCOMRAM 000003
creer_champi@y              cstackCOMRAM 000001
displayObject@height        cstackCOMRAM 000018
displayObject@i             cstackCOMRAM 000023
displayObject@j             cstackCOMRAM 000025
displayObject@nb            cstackCOMRAM 000021
displayObject@tab           cstackCOMRAM 000012
displayObject@width         cstackCOMRAM 00001A
displayObject@write         cstackCOMRAM 00001C
displayObject@x             cstackCOMRAM 000014
displayObject@y             cstackCOMRAM 000016
effacer_sequence@i          cstackCOMRAM 00002B
end_of_initialization       cinit        0016B6
game_play@action            cstackCOMRAM 000036
game_play@button_pressed    cstackCOMRAM 000034
game_play@write             cstackCOMRAM 000032
game_stats@sortie_enable    cstackCOMRAM 000018
glcd_FillScreen@color       cstackCOMRAM 00000B
glcd_FillScreen@i           cstackCOMRAM 00000D
glcd_FillScreen@j           cstackCOMRAM 00000C
glcd_Image@cs               cstackCOMRAM 00000F
glcd_Image@i                cstackCOMRAM 00000E
glcd_Image@j                cstackCOMRAM 00000D
glcd_Image@ptr              cstackCOMRAM 00000B
glcd_Init@mode              cstackCOMRAM 00000F
glcd_PlotPixel@color        cstackCOMRAM 00000C
glcd_PlotPixel@data         cstackCOMRAM 000010
glcd_PlotPixel@side         cstackCOMRAM 000011
glcd_PlotPixel@xpos         cstackCOMRAM 00000F
glcd_PlotPixel@ypos         cstackCOMRAM 00000B
glcd_ReadByte@data          cstackCOMRAM 000002
glcd_ReadByte@side          cstackCOMRAM 000001
glcd_SetCursor@side         cstackCOMRAM 00000C
glcd_SetCursor@xpos         cstackCOMRAM 00000D
glcd_SetCursor@ypos         cstackCOMRAM 00000B
glcd_WriteByte@data         cstackCOMRAM 000009
glcd_WriteByte@side         cstackCOMRAM 00000A
glcd_WriteChar3x6@ch        cstackCOMRAM 00000F
glcd_WriteChar3x6@color     cstackCOMRAM 00000B
glcd_WriteChar3x6@i         cstackCOMRAM 000010
glcd_WriteChar3x6@side      cstackCOMRAM 000011
glcd_WriteChar3x6@xpos      cstackCOMRAM 00000E
glcd_WriteChar8X8@ch        cstackCOMRAM 000010
glcd_WriteChar8X8@chr       cstackCOMRAM 00000E
glcd_WriteChar8X8@color     cstackCOMRAM 00000B
glcd_WriteChar8X8@i         cstackCOMRAM 000012
glcd_WriteChar8X8@side      cstackCOMRAM 000013
glcd_WriteChar8X8@xpos      cstackCOMRAM 000011
glcd_WriteString@color      cstackCOMRAM 000017
glcd_WriteString@font       cstackCOMRAM 000016
glcd_WriteString@str        cstackCOMRAM 000014
int$flags                   temp         000055
int_func                    intcode_body 0017F2
intlevel0                   text         000000
intlevel1                   text         000000
intlevel2                   text         000000
intlevel3                   text         000000
itoa@i                      cstackCOMRAM 000015
itoa@n                      cstackCOMRAM 00000F
itoa@s                      cstackCOMRAM 000011
itoa@sign                   cstackCOMRAM 000013
main@bool_jeu               cstackCOMRAM 00003F
memset@c                    cstackCOMRAM 000003
memset@dest                 cstackCOMRAM 000001
memset@k                    cstackCOMRAM 00000B
memset@n                    cstackCOMRAM 000005
memset@s                    cstackCOMRAM 00000D
menu_actions@action         cstackCOMRAM 000030
menu_cursor@action          cstackCOMRAM 000027
menu_cursor@write           cstackCOMRAM 000029
remplir_tableau@i           cstackCOMRAM 000007
remplir_tableau@x           cstackCOMRAM 000009
reverse@c                   cstackCOMRAM 00000A
reverse@i                   cstackCOMRAM 00000B
reverse@j                   cstackCOMRAM 00000D
reverse@s                   cstackCOMRAM 000007
stackhi                     (abs)        0007FF
stacklo                     (abs)        00007E
start                       init         00000E
start_initialization        cinit        001672
strlen@a                    cstackCOMRAM 000005
strlen@s                    cstackCOMRAM 000001
ttemp5                      temp         000056
ttemp6                      temp         000059
ttemp7                      temp         00005D
wtemp8                      temp         000056


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 43 in file "main.c"
 Parameters:    Size  Location     Type
  argc            2   55[COMRAM] int 
  argv            3   57[COMRAM] PTR PTR unsigned char 
 Auto vars:     Size  Location     Type
  bool_jeu        2   62[COMRAM] int 
 Return value:  Size  Location     Type
                  2   55[COMRAM] int 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         5       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels required when called:    9
 This function calls:
		_game_play
		_glcd_Init
		_microgochi_init
		_screen_credits
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _screen_credits *****************
 Defined at:
		line 25 in file "screen.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_glcd_FillScreen
		_glcd_SetCursor
		_glcd_WriteString
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _microgochi_init *****************
 Defined at:
		line 14 in file "microgochi.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _glcd_Init *****************
 Defined at:
		line 341 in file "glcd.c"
 Parameters:    Size  Location     Type
  mode            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  mode            1   14[COMRAM] unsigned char 
  k               1    0        unsigned char 
  j               1    0        unsigned char 
  i               1    0        unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_glcd_FillScreen
		_glcd_WriteByte
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _game_play *****************
 Defined at:
		line 22 in file "game.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  action          2   53[COMRAM] int 
  button_press    2   51[COMRAM] int 
  write           2   49[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_glcd_FillScreen
		_glcd_Image
		_glcd_SetCursor
		_menu_actions
		_menu_cursor
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _menu_cursor *****************
 Defined at:
		line 18 in file "menu.c"
 Parameters:    Size  Location     Type
  action          2   38[COMRAM] int 
  write           2   40[COMRAM] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_displayObject
 This function is called by:
		_game_play
 This function uses a non-reentrant model


 *************** function _menu_actions *****************
 Defined at:
		line 39 in file "menu.c"
 Parameters:    Size  Location     Type
  action          2   47[COMRAM] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_game_stats
		_lancer_minijeu
		_micro_calin
		_micro_dormir
		_micro_manger
 This function is called by:
		_game_play
 This function uses a non-reentrant model


 *************** function _micro_manger *****************
 Defined at:
		line 33 in file "microgochi.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_menu_actions
 This function uses a non-reentrant model


 *************** function _micro_dormir *****************
 Defined at:
		line 43 in file "microgochi.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_menu_actions
 This function uses a non-reentrant model


 *************** function _micro_calin *****************
 Defined at:
		line 38 in file "microgochi.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_menu_actions
 This function uses a non-reentrant model


 *************** function _lancer_minijeu *****************
 Defined at:
		line 89 in file "minijeu.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_bouger_sequence
		_displayObject
		_glcd_FillScreen
		_remplir_tableau
 This function is called by:
		_menu_actions
 This function uses a non-reentrant model


 *************** function _remplir_tableau *****************
 Defined at:
		line 36 in file "minijeu.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2    6[COMRAM] int 
  x               1    8[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_creer_champi
 This function is called by:
		_lancer_minijeu
 This function uses a non-reentrant model


 *************** function _creer_champi *****************
 Defined at:
		line 28 in file "minijeu.c"
 Parameters:    Size  Location     Type
  x               1    wreg     unsigned char 
  y               1    0[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  x               1    2[COMRAM] unsigned char 
  new_champi      2    3[COMRAM] struct champi
 Return value:  Size  Location     Type
                  2    0[COMRAM] struct champi
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_remplir_tableau
 This function uses a non-reentrant model


 *************** function _bouger_sequence *****************
 Defined at:
		line 68 in file "minijeu.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2   45[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_afficher_sequence
		_effacer_sequence
 This function is called by:
		_lancer_minijeu
 This function uses a non-reentrant model


 *************** function _effacer_sequence *****************
 Defined at:
		line 57 in file "minijeu.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2   42[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_displayObject
 This function is called by:
		_bouger_sequence
 This function uses a non-reentrant model


 *************** function _afficher_sequence *****************
 Defined at:
		line 46 in file "minijeu.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2   42[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_displayObject
 This function is called by:
		_bouger_sequence
 This function uses a non-reentrant model


 *************** function _displayObject *****************
 Defined at:
		line 13 in file "myglcd.c"
 Parameters:    Size  Location     Type
  tab             2   17[COMRAM] PTR unsigned char 
		 -> tamago(126), champi(126), cursor(30), 
  x               2   19[COMRAM] int 
  y               2   21[COMRAM] int 
  height          2   23[COMRAM] int 
  width           2   25[COMRAM] int 
  write           2   27[COMRAM] int 
 Auto vars:     Size  Location     Type
  j               2   36[COMRAM] int 
  i               2   34[COMRAM] int 
  nb              2   32[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:        12       0       0       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0       0       0
      Totals:        21       0       0       0       0       0       0       0       0
Total ram usage:       21 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_glcd_PlotPixel
 This function is called by:
		_menu_cursor
		_afficher_sequence
		_effacer_sequence
		_lancer_minijeu
 This function uses a non-reentrant model


 *************** function _glcd_PlotPixel *****************
 Defined at:
		line 468 in file "glcd.c"
 Parameters:    Size  Location     Type
  xpos            1    wreg     unsigned char 
  ypos            1   10[COMRAM] unsigned char 
  color           1   11[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  xpos            1   14[COMRAM] unsigned char 
  side            1   16[COMRAM] unsigned char 
  data            1   15[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___awdiv
		_glcd_ReadByte
		_glcd_WriteByte
 This function is called by:
		_displayObject
		_glcd_Rect
 This function uses a non-reentrant model


 *************** function _glcd_ReadByte *****************
 Defined at:
		line 431 in file "glcd.c"
 Parameters:    Size  Location     Type
  side            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  side            1    0[COMRAM] unsigned char 
  data            1    1[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_glcd_PlotPixel
 This function uses a non-reentrant model


 *************** function _game_stats *****************
 Defined at:
		line 93 in file "game.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  sortie_enabl    2   23[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_glcd_FillScreen
		_glcd_SetCursor
		_glcd_WriteString
		_itoa
		_memset
 This function is called by:
		_menu_actions
 This function uses a non-reentrant model


 *************** function _memset *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c"
 Parameters:    Size  Location     Type
  dest            2    0[COMRAM] PTR void 
		 -> buffer(3), 
  c               2    2[COMRAM] int 
  n               2    4[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  s               2   12[COMRAM] PTR unsigned char 
		 -> buffer(3), 
  k               2   10[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  2    0[COMRAM] PTR void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         6       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0       0       0
      Totals:        14       0       0       0       0       0       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_game_stats
 This function uses a non-reentrant model


 *************** function _itoa *****************
 Defined at:
		line 14 in file "itoa.c"
 Parameters:    Size  Location     Type
  n               2   14[COMRAM] int 
  s               2   16[COMRAM] PTR unsigned char 
		 -> buffer(3), 
 Auto vars:     Size  Location     Type
  i               2   20[COMRAM] int 
  sign            2   18[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___awdiv
		___awmod
		_reverse
 This function is called by:
		_game_stats
 This function uses a non-reentrant model


 *************** function _reverse *****************
 Defined at:
		line 31 in file "itoa.c"
 Parameters:    Size  Location     Type
  s               2    6[COMRAM] PTR unsigned char 
		 -> buffer(3), 
 Auto vars:     Size  Location     Type
  j               2   12[COMRAM] int 
  i               2   10[COMRAM] int 
  c               1    9[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         5       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_strlen
 This function is called by:
		_itoa
 This function uses a non-reentrant model


 *************** function _strlen *****************
 Defined at:
		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
 Parameters:    Size  Location     Type
  s               2    0[COMRAM] PTR const unsigned char 
		 -> buffer(3), 
 Auto vars:     Size  Location     Type
  a               2    4[COMRAM] PTR const unsigned char 
		 -> buffer(3), 
 Return value:  Size  Location     Type
                  2    0[COMRAM] unsigned int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_reverse
 This function uses a non-reentrant model


 *************** function ___awmod *****************
 Defined at:
		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c"
 Parameters:    Size  Location     Type
  dividend        2    0[COMRAM] int 
  divisor         2    2[COMRAM] int 
 Auto vars:     Size  Location     Type
  sign            1    5[COMRAM] unsigned char 
  counter         1    4[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2    0[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_itoa
 This function uses a non-reentrant model


 *************** function ___awdiv *****************
 Defined at:
		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
 Parameters:    Size  Location     Type
  dividend        2    0[COMRAM] int 
  divisor         2    2[COMRAM] int 
 Auto vars:     Size  Location     Type
  quotient        2    6[COMRAM] int 
  sign            1    5[COMRAM] unsigned char 
  counter         1    4[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2    0[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_glcd_PlotPixel
		_itoa
 This function uses a non-reentrant model


 *************** function _glcd_WriteString *****************
 Defined at:
		line 670 in file "glcd.c"
 Parameters:    Size  Location     Type
  str             2   19[COMRAM] PTR const unsigned char 
		 -> STR_12(4), STR_11(6), STR_10(5), STR_9(7), 
		 -> STR_8(6), STR_7(6), STR_6(7), STR_5(7), 
		 -> STR_4(9), buffer(3), STR_3(6), STR_2(9), 
		 -> STR_1(7), 
  font            1   21[COMRAM] unsigned char 
  color           1   22[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_glcd_WriteChar3x6
		_glcd_WriteChar8X8
 This function is called by:
		_game_stats
		_screen_credits
		_glcd_text_write
 This function uses a non-reentrant model


 *************** function _glcd_WriteChar8X8 *****************
 Defined at:
		line 576 in file "glcd.c"
 Parameters:    Size  Location     Type
  ch              1    wreg     unsigned char 
  color           1   10[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  ch              1   15[COMRAM] unsigned char 
  chr             2   13[COMRAM] unsigned int 
  side            1   18[COMRAM] unsigned char 
  i               1   17[COMRAM] unsigned char 
  xpos            1   16[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         1       0       0       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_glcd_WriteByte
 This function is called by:
		_glcd_WriteString
 This function uses a non-reentrant model


 *************** function _glcd_WriteChar3x6 *****************
 Defined at:
		line 624 in file "glcd.c"
 Parameters:    Size  Location     Type
  ch              1    wreg     unsigned char 
  color           1   10[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  ch              1   14[COMRAM] unsigned char 
  side            1   16[COMRAM] unsigned char 
  i               1   15[COMRAM] unsigned char 
  xpos            1   13[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         1       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_glcd_WriteByte
 This function is called by:
		_glcd_WriteString
 This function uses a non-reentrant model


 *************** function _glcd_SetCursor *****************
 Defined at:
		line 551 in file "glcd.c"
 Parameters:    Size  Location     Type
  xpos            1    wreg     unsigned char 
  ypos            1   10[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  xpos            1   12[COMRAM] unsigned char 
  side            1   11[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         1       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_glcd_WriteByte
 This function is called by:
		_game_play
		_game_stats
		_screen_credits
		_glcd_text_write
 This function uses a non-reentrant model


 *************** function _glcd_FillScreen *****************
 Defined at:
		line 527 in file "glcd.c"
 Parameters:    Size  Location     Type
  color           1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  color           1   10[COMRAM] unsigned char 
  i               1   12[COMRAM] unsigned char 
  j               1   11[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_glcd_WriteByte
 This function is called by:
		_game_play
		_game_stats
		_screen_credits
		_glcd_Init
		_lancer_minijeu
 This function uses a non-reentrant model


 *************** function _glcd_Image *****************
 Defined at:
		line 697 in file "glcd.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  ptr             2   10[COMRAM] int 
  cs              1   14[COMRAM] unsigned char 
  i               1   13[COMRAM] unsigned char 
  j               1   12[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         5       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_glcd_WriteByte
 This function is called by:
		_game_play
 This function uses a non-reentrant model


 *************** function _glcd_WriteByte *****************
 Defined at:
		line 395 in file "glcd.c"
 Parameters:    Size  Location     Type
  side            1    wreg     unsigned char 
  data            1    8[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  side            1    9[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         1       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_glcd_Init
		_glcd_PlotPixel
		_glcd_FillScreen
		_glcd_SetCursor
		_glcd_WriteChar8X8
		_glcd_WriteChar3x6
		_glcd_Image
		_glcd_icon8X8
 This function uses a non-reentrant model


 *************** function _isr *****************
 Defined at:
		line 30 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 2
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
minijeu.c
		_creer_champi  		CODE           	183E	0000	25
		_afficher_sequence		CODE           	1288	0000	173
		_effacer_sequence		CODE           	11DC	0000	173
		_remplir_tableau		CODE           	1604	0000	111
		_lancer_minijeu		CODE           	1716	0000	81
		_bouger_sequence		CODE           	13DE	0000	155

minijeu.c estimated size: 718

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c
		___awmod       		CODE           	0D20	0000	217

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awmod.c estimated size: 217

microgochi.c
		_microgochi_init		CODE           	1856	0000	23
		_micro_dormir  		CODE           	1872	0000	7
		_micro_manger  		CODE           	186C	0000	7
		_micro_calin   		CODE           	1878	0000	7

microgochi.c estimated size: 44

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c
		_strlen        		CODE           	16C4	0000	83

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c estimated size: 83

screen.c
		_screen_credits		CODE           	0B6C	0000	219

screen.c estimated size: 219

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c
		_memset        		CODE           	03DA	0000	447

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memset.c estimated size: 447

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c
		___awdiv       		CODE           	0A80	0000	237

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c estimated size: 237

shared
		_Font3x6       		MEDIUMCONST    	7DE9	0000	196
		_champi        		MEDIUMCONST    	7F32	0000	127
		_tamago        		MEDIUMCONST    	7EB4	0000	127
		_Font8x8       		MEDIUMCONST    	71E9	0000	2049
		_test          		MEDIUMCONST    	79E9	0000	1025
		__initialization		CODE           	1672	0000	69
		_ou            		MEDIUMCONST    	7EAC	0000	9

shared estimated size: 3602

game.c
		_game_stats    		CODE           	0204	0000	471
		_game_play     		CODE           	0012	0000	499

game.c estimated size: 970

glcd.c
		_glcd_SetCursor		CODE           	1594	0000	113
		_glcd_WriteString		CODE           	1334	0000	171
		_glcd_WriteByte		CODE           	17AC	0000	71
		_glcd_Init     		CODE           	0FA4	0000	207
		_glcd_ReadByte 		CODE           	1766	0000	71
		_glcd_WriteChar8X8		CODE           	0842	0000	301
		_glcd_FillScreen		CODE           	1072	0000	185
		_glcd_WriteChar3x6		CODE           	06FE	0000	325
		_glcd_PlotPixel		CODE           	0C46	0000	219
		_glcd_Image    		CODE           	0ECE	0000	215

glcd.c estimated size: 1878

myglcd.c
		_displayObject 		CODE           	0598	0000	359

myglcd.c estimated size: 359

menu.c
		_menu_actions  		CODE           	112A	0000	179
		_menu_cursor   		CODE           	096E	0000	275

menu.c estimated size: 454

itoa.c
		_itoa          		CODE           	0DF8	0000	215
		_reverse       		CODE           	1478	0000	147

itoa.c estimated size: 362

main.c
		_main          		CODE           	150A	0000	139
		_isr           		CODE           	0008	0000	53

main.c estimated size: 192

